tmp  [[DataBlock<[0,16) --from--(0)>]]
tmp  [[DataBlock<[0,16) --from--(1)>]]
tmp  [[DataBlock<[0,16) --from--(2)>]]
tmp  [[DataBlock<[0,16) --from--(3)>]]
ret  [[[DataBlock<[0,4)>], [DataBlock<[4,8)>], [DataBlock<[8,12)>], [DataBlock<[12,16)>]]]
tmp  [[DataBlock<[0,16) --from--(4)>]]
tmp  [[DataBlock<[0,16) --from--(5)>]]
tmp  [[DataBlock<[0,16) --from--(6)>]]
tmp  [[DataBlock<[0,16) --from--(7)>]]
ret  [[[DataBlock<[0,4)>], [DataBlock<[4,8)>], [DataBlock<[8,12)>], [DataBlock<[12,16)>]]]
tmp  [[DataBlock<[0,4) --from--(0,1,2,3)>]]
tmp  [[DataBlock<[0,4) --from--(0,1,2,3)>], [DataBlock<[4,8) --from--(0,1,2,3)>]]
tmp  [[DataBlock<[0,4) --from--(0,1,2,3)>], [DataBlock<[4,8) --from--(0,1,2,3)>], [DataBlock<[8,12) --from--(0,1,2,3)>]]
tmp  [[DataBlock<[0,4) --from--(0,1,2,3)>], [DataBlock<[4,8) --from--(0,1,2,3)>], [DataBlock<[8,12) --from--(0,1,2,3)>], [DataBlock<[12,16) --from--(0,1,2,3)>]]
tmp  [[DataBlock<[0,4) --from--(4,5,6,7)>]]
tmp  [[DataBlock<[0,4) --from--(4,5,6,7)>], [DataBlock<[4,8) --from--(4,5,6,7)>]]
tmp  [[DataBlock<[0,4) --from--(4,5,6,7)>], [DataBlock<[4,8) --from--(4,5,6,7)>], [DataBlock<[8,12) --from--(4,5,6,7)>]]
tmp  [[DataBlock<[0,4) --from--(4,5,6,7)>], [DataBlock<[4,8) --from--(4,5,6,7)>], [DataBlock<[8,12) --from--(4,5,6,7)>], [DataBlock<[12,16) --from--(4,5,6,7)>]]
ret  [[[DataBlock<[0,2)>], [DataBlock<[6,8)>], [DataBlock<[8,10)>], [DataBlock<[14,16)>], [DataBlock<[2,4)>], [DataBlock<[4,6)>], [DataBlock<[10,12)>], [DataBlock<[12,14)>]]]
tmp  [[DataBlock<[0,16) --from--(8)>]]
tmp  [[DataBlock<[0,16) --from--(9)>]]
tmp  [[DataBlock<[0,16) --from--(10)>]]
tmp  [[DataBlock<[0,16) --from--(11)>]]
ret  [[[DataBlock<[0,4)>], [DataBlock<[4,8)>], [DataBlock<[8,12)>], [DataBlock<[12,16)>]]]
tmp  [[DataBlock<[0,16) --from--(12)>]]
tmp  [[DataBlock<[0,16) --from--(13)>]]
tmp  [[DataBlock<[0,16) --from--(14)>]]
tmp  [[DataBlock<[0,16) --from--(15)>]]
ret  [[[DataBlock<[0,4)>], [DataBlock<[4,8)>], [DataBlock<[8,12)>], [DataBlock<[12,16)>]]]
tmp  [[DataBlock<[0,4) --from--(8,9,10,11)>]]
tmp  [[DataBlock<[0,4) --from--(8,9,10,11)>], [DataBlock<[4,8) --from--(8,9,10,11)>]]
tmp  [[DataBlock<[0,4) --from--(8,9,10,11)>], [DataBlock<[4,8) --from--(8,9,10,11)>], [DataBlock<[8,12) --from--(8,9,10,11)>]]
tmp  [[DataBlock<[0,4) --from--(8,9,10,11)>], [DataBlock<[4,8) --from--(8,9,10,11)>], [DataBlock<[8,12) --from--(8,9,10,11)>], [DataBlock<[12,16) --from--(8,9,10,11)>]]
tmp  [[DataBlock<[0,4) --from--(12,13,14,15)>]]
tmp  [[DataBlock<[0,4) --from--(12,13,14,15)>], [DataBlock<[4,8) --from--(12,13,14,15)>]]
tmp  [[DataBlock<[0,4) --from--(12,13,14,15)>], [DataBlock<[4,8) --from--(12,13,14,15)>], [DataBlock<[8,12) --from--(12,13,14,15)>]]
tmp  [[DataBlock<[0,4) --from--(12,13,14,15)>], [DataBlock<[4,8) --from--(12,13,14,15)>], [DataBlock<[8,12) --from--(12,13,14,15)>], [DataBlock<[12,16) --from--(12,13,14,15)>]]
ret  [[[DataBlock<[0,2)>], [DataBlock<[6,8)>], [DataBlock<[8,10)>], [DataBlock<[14,16)>], [DataBlock<[2,4)>], [DataBlock<[4,6)>], [DataBlock<[10,12)>], [DataBlock<[12,14)>]]]
tmp  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>]]
tmp  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>]]
tmp  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>]]
tmp  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>]]
tmp  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>]]
tmp  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>]]
tmp  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>]]
tmp  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>]]
tmp  [[DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>]]
tmp  [[DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>]]
tmp  [[DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>]]
tmp  [[DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>]]
tmp  [[DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>]]
tmp  [[DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>]]
tmp  [[DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>]]
tmp  [[DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]]
ret  [[[DataBlock<[0,1)>], [DataBlock<[7,8)>], [DataBlock<[8,9)>], [DataBlock<[15,16)>], [DataBlock<[3,4)>], [DataBlock<[4,5)>], [DataBlock<[11,12)>], [DataBlock<[12,13)>], [DataBlock<[1,2)>], [DataBlock<[6,7)>], [DataBlock<[9,10)>], [DataBlock<[14,15)>], [DataBlock<[2,3)>], [DataBlock<[5,6)>], [DataBlock<[10,11)>], [DataBlock<[13,14)>]]]
Reduce-scatter data sketch on symmetry (((0,1,2,3),(4,5,6,7)),((8,9,10,11),(12,13,14,15)))
> step 0
print the table in 16 :
| {[0,16) --from--(0)} | {[0,16) --from--(1)} | {[0,16) --from--(2)} | {[0,16) --from--(3)} | {[0,16) --from--(4)} | {[0,16) --from--(5)} | {[0,16) --from--(6)} | {[0,16) --from--(7)} | {[0,16) --from--(8)} | {[0,16) --from--(9)} | {[0,16) --from--(10)} | {[0,16) --from--(11)} | {[0,16) --from--(12)} | {[0,16) --from--(13)} | {[0,16) --from--(14)} | {[0,16) --from--(15)} | 
> step 1
print the table in 16 :
| {[0,4) --from--(0,1,2,3)} | {[4,8) --from--(0,1,2,3)} | {[8,12) --from--(0,1,2,3)} | {[12,16) --from--(0,1,2,3)} | {[0,4) --from--(4,5,6,7)} | {[4,8) --from--(4,5,6,7)} | {[8,12) --from--(4,5,6,7)} | {[12,16) --from--(4,5,6,7)} | {[0,4) --from--(8,9,10,11)} | {[4,8) --from--(8,9,10,11)} | {[8,12) --from--(8,9,10,11)} | {[12,16) --from--(8,9,10,11)} | {[0,4) --from--(12,13,14,15)} | {[4,8) --from--(12,13,14,15)} | {[8,12) --from--(12,13,14,15)} | {[12,16) --from--(12,13,14,15)} | 
> step 2
print the table in 16 :
| {[0,2) --from--(0,1,2,3,4,5,6,7)} | {[6,8) --from--(0,1,2,3,4,5,6,7)} | {[8,10) --from--(0,1,2,3,4,5,6,7)} | {[14,16) --from--(0,1,2,3,4,5,6,7)} | {[2,4) --from--(0,1,2,3,4,5,6,7)} | {[4,6) --from--(0,1,2,3,4,5,6,7)} | {[10,12) --from--(0,1,2,3,4,5,6,7)} | {[12,14) --from--(0,1,2,3,4,5,6,7)} | {[0,2) --from--(8,9,10,11,12,13,14,15)} | {[6,8) --from--(8,9,10,11,12,13,14,15)} | {[8,10) --from--(8,9,10,11,12,13,14,15)} | {[14,16) --from--(8,9,10,11,12,13,14,15)} | {[2,4) --from--(8,9,10,11,12,13,14,15)} | {[4,6) --from--(8,9,10,11,12,13,14,15)} | {[10,12) --from--(8,9,10,11,12,13,14,15)} | {[12,14) --from--(8,9,10,11,12,13,14,15)} | 
> step 3
print the table in 16 :
| {[0,1) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)} | {[7,8) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)} | {[8,9) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)} | {[15,16) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)} | {[3,4) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)} | {[4,5) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)} | {[11,12) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)} | {[12,13) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)} | {[1,2) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)} | {[6,7) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)} | {[9,10) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)} | {[14,15) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)} | {[2,3) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)} | {[5,6) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)} | {[10,11) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)} | {[13,14) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)} | 
color  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
ans  [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11], [12, 13, 14, 15]]
origin  [[DataBlock<[0,16) --from--(0)>], [DataBlock<[0,16) --from--(1)>], [DataBlock<[0,16) --from--(2)>], [DataBlock<[0,16) --from--(3)>], [DataBlock<[0,16) --from--(4)>], [DataBlock<[0,16) --from--(5)>], [DataBlock<[0,16) --from--(6)>], [DataBlock<[0,16) --from--(7)>], [DataBlock<[0,16) --from--(8)>], [DataBlock<[0,16) --from--(9)>], [DataBlock<[0,16) --from--(10)>], [DataBlock<[0,16) --from--(11)>], [DataBlock<[0,16) --from--(12)>], [DataBlock<[0,16) --from--(13)>], [DataBlock<[0,16) --from--(14)>], [DataBlock<[0,16) --from--(15)>]]
target  [[DataBlock<[0,4) --from--(0,1,2,3)>], [DataBlock<[4,8) --from--(0,1,2,3)>], [DataBlock<[8,12) --from--(0,1,2,3)>], [DataBlock<[12,16) --from--(0,1,2,3)>], [DataBlock<[0,4) --from--(4,5,6,7)>], [DataBlock<[4,8) --from--(4,5,6,7)>], [DataBlock<[8,12) --from--(4,5,6,7)>], [DataBlock<[12,16) --from--(4,5,6,7)>], [DataBlock<[0,4) --from--(8,9,10,11)>], [DataBlock<[4,8) --from--(8,9,10,11)>], [DataBlock<[8,12) --from--(8,9,10,11)>], [DataBlock<[12,16) --from--(8,9,10,11)>], [DataBlock<[0,4) --from--(12,13,14,15)>], [DataBlock<[4,8) --from--(12,13,14,15)>], [DataBlock<[8,12) --from--(12,13,14,15)>], [DataBlock<[12,16) --from--(12,13,14,15)>]]
353 target[ 0 ] before sort  [DataBlock<[0,4) --from--(0,1,2,3)>]
355 target[ 0 ] after sort  [DataBlock<[0,4) --from--(0,1,2,3)>]
353 target[ 1 ] before sort  [DataBlock<[4,8) --from--(0,1,2,3)>]
355 target[ 1 ] after sort  [DataBlock<[4,8) --from--(0,1,2,3)>]
353 target[ 2 ] before sort  [DataBlock<[8,12) --from--(0,1,2,3)>]
355 target[ 2 ] after sort  [DataBlock<[8,12) --from--(0,1,2,3)>]
353 target[ 3 ] before sort  [DataBlock<[12,16) --from--(0,1,2,3)>]
355 target[ 3 ] after sort  [DataBlock<[12,16) --from--(0,1,2,3)>]
RingOp i  1
origin[group[0]]  [DataBlock<[0,16) --from--(0)>]
origin[i]  [DataBlock<[0,16) --from--(1)>]
RingOp i  2
origin[group[0]]  [DataBlock<[0,16) --from--(0)>]
origin[i]  [DataBlock<[0,16) --from--(2)>]
RingOp i  3
origin[group[0]]  [DataBlock<[0,16) --from--(0)>]
origin[i]  [DataBlock<[0,16) --from--(3)>]
360 group  [0, 1, 2, 3]
362 target[i][0]  [12,16) --from--(0,1,2,3)
364 group  [0, 1, 2, 3]
block_template[ 0 ]  [DataBlock<[0,4)>]
block_template[ 1 ]  [DataBlock<[4,8)>]
block_template[ 2 ]  [DataBlock<[8,12)>]
block_template[ 3 ]  [DataBlock<[12,16)>]
offset  1
group  [0, 1, 2, 3]
node_index  0
offset  1
(node_index + len(group) - offset) % len(group)  3
src 0
dst 1
blk  [12,16) --from--(0)
CommOp  0 send <[12,16) --from--(0)> to 1
group  [0, 1, 2, 3]
node_index  1
offset  1
(node_index + len(group) - offset) % len(group)  0
src 1
dst 2
blk  [0,4) --from--(1)
CommOp  1 send <[0,4) --from--(1)> to 2
group  [0, 1, 2, 3]
node_index  2
offset  1
(node_index + len(group) - offset) % len(group)  1
src 2
dst 3
blk  [4,8) --from--(2)
CommOp  2 send <[4,8) --from--(2)> to 3
group  [0, 1, 2, 3]
node_index  3
offset  1
(node_index + len(group) - offset) % len(group)  2
src 3
dst 0
blk  [8,12) --from--(3)
CommOp  3 send <[8,12) --from--(3)> to 0
offset  2
group  [0, 1, 2, 3]
node_index  0
offset  2
(node_index + len(group) - offset) % len(group)  2
src 0
dst 1
blk  [8,12) --from--(0,3)
CommOp  0 send <[8,12) --from--(0,3)> to 1
group  [0, 1, 2, 3]
node_index  1
offset  2
(node_index + len(group) - offset) % len(group)  3
src 1
dst 2
blk  [12,16) --from--(1,0)
CommOp  1 send <[12,16) --from--(1,0)> to 2
group  [0, 1, 2, 3]
node_index  2
offset  2
(node_index + len(group) - offset) % len(group)  0
src 2
dst 3
blk  [0,4) --from--(2,1)
CommOp  2 send <[0,4) --from--(2,1)> to 3
group  [0, 1, 2, 3]
node_index  3
offset  2
(node_index + len(group) - offset) % len(group)  1
src 3
dst 0
blk  [4,8) --from--(3,2)
CommOp  3 send <[4,8) --from--(3,2)> to 0
offset  3
group  [0, 1, 2, 3]
node_index  0
offset  3
(node_index + len(group) - offset) % len(group)  1
src 0
dst 1
blk  [4,8) --from--(0,3,2)
CommOp  0 send <[4,8) --from--(0,3,2)> to 1
group  [0, 1, 2, 3]
node_index  1
offset  3
(node_index + len(group) - offset) % len(group)  2
src 1
dst 2
blk  [8,12) --from--(1,0,3)
CommOp  1 send <[8,12) --from--(1,0,3)> to 2
group  [0, 1, 2, 3]
node_index  2
offset  3
(node_index + len(group) - offset) % len(group)  3
src 2
dst 3
blk  [12,16) --from--(2,1,0)
CommOp  2 send <[12,16) --from--(2,1,0)> to 3
group  [0, 1, 2, 3]
node_index  3
offset  3
(node_index + len(group) - offset) % len(group)  0
src 3
dst 0
blk  [0,4) --from--(3,2,1)
CommOp  3 send <[0,4) --from--(3,2,1)> to 0
op  Ring: 0 send <[12,16) --from--(0)> to 1, 1 send <[0,4) --from--(1)> to 2, 2 send <[4,8) --from--(2)> to 3, 3 send <[8,12) --from--(3)> to 0; 0 send <[8,12) --from--(0,3)> to 1, 1 send <[12,16) --from--(1,0)> to 2, 2 send <[0,4) --from--(2,1)> to 3, 3 send <[4,8) --from--(3,2)> to 0; 0 send <[4,8) --from--(0,3,2)> to 1, 1 send <[8,12) --from--(1,0,3)> to 2, 2 send <[12,16) --from--(2,1,0)> to 3, 3 send <[0,4) --from--(3,2,1)> to 0
origin  [[DataBlock<[0,16) --from--(0)>], [DataBlock<[0,16) --from--(1)>], [DataBlock<[0,16) --from--(2)>], [DataBlock<[0,16) --from--(3)>], [DataBlock<[0,16) --from--(4)>], [DataBlock<[0,16) --from--(5)>], [DataBlock<[0,16) --from--(6)>], [DataBlock<[0,16) --from--(7)>], [DataBlock<[0,16) --from--(8)>], [DataBlock<[0,16) --from--(9)>], [DataBlock<[0,16) --from--(10)>], [DataBlock<[0,16) --from--(11)>], [DataBlock<[0,16) --from--(12)>], [DataBlock<[0,16) --from--(13)>], [DataBlock<[0,16) --from--(14)>], [DataBlock<[0,16) --from--(15)>]]
target  [[DataBlock<[0,4) --from--(0,1,2,3)>], [DataBlock<[4,8) --from--(0,1,2,3)>], [DataBlock<[8,12) --from--(0,1,2,3)>], [DataBlock<[12,16) --from--(0,1,2,3)>], [DataBlock<[0,4) --from--(4,5,6,7)>], [DataBlock<[4,8) --from--(4,5,6,7)>], [DataBlock<[8,12) --from--(4,5,6,7)>], [DataBlock<[12,16) --from--(4,5,6,7)>], [DataBlock<[0,4) --from--(8,9,10,11)>], [DataBlock<[4,8) --from--(8,9,10,11)>], [DataBlock<[8,12) --from--(8,9,10,11)>], [DataBlock<[12,16) --from--(8,9,10,11)>], [DataBlock<[0,4) --from--(12,13,14,15)>], [DataBlock<[4,8) --from--(12,13,14,15)>], [DataBlock<[8,12) --from--(12,13,14,15)>], [DataBlock<[12,16) --from--(12,13,14,15)>]]
353 target[ 4 ] before sort  [DataBlock<[0,4) --from--(4,5,6,7)>]
355 target[ 4 ] after sort  [DataBlock<[0,4) --from--(4,5,6,7)>]
353 target[ 5 ] before sort  [DataBlock<[4,8) --from--(4,5,6,7)>]
355 target[ 5 ] after sort  [DataBlock<[4,8) --from--(4,5,6,7)>]
353 target[ 6 ] before sort  [DataBlock<[8,12) --from--(4,5,6,7)>]
355 target[ 6 ] after sort  [DataBlock<[8,12) --from--(4,5,6,7)>]
353 target[ 7 ] before sort  [DataBlock<[12,16) --from--(4,5,6,7)>]
355 target[ 7 ] after sort  [DataBlock<[12,16) --from--(4,5,6,7)>]
RingOp i  5
origin[group[0]]  [DataBlock<[0,16) --from--(4)>]
origin[i]  [DataBlock<[0,16) --from--(5)>]
RingOp i  6
origin[group[0]]  [DataBlock<[0,16) --from--(4)>]
origin[i]  [DataBlock<[0,16) --from--(6)>]
RingOp i  7
origin[group[0]]  [DataBlock<[0,16) --from--(4)>]
origin[i]  [DataBlock<[0,16) --from--(7)>]
360 group  [4, 5, 6, 7]
362 target[i][0]  [12,16) --from--(4,5,6,7)
364 group  [4, 5, 6, 7]
block_template[ 0 ]  [DataBlock<[0,4)>]
block_template[ 1 ]  [DataBlock<[4,8)>]
block_template[ 2 ]  [DataBlock<[8,12)>]
block_template[ 3 ]  [DataBlock<[12,16)>]
offset  1
group  [4, 5, 6, 7]
node_index  4
offset  1
(node_index + len(group) - offset) % len(group)  3
src 4
dst 5
blk  [12,16) --from--(4)
CommOp  4 send <[12,16) --from--(4)> to 5
group  [4, 5, 6, 7]
node_index  5
offset  1
(node_index + len(group) - offset) % len(group)  0
src 5
dst 6
blk  [0,4) --from--(5)
CommOp  5 send <[0,4) --from--(5)> to 6
group  [4, 5, 6, 7]
node_index  6
offset  1
(node_index + len(group) - offset) % len(group)  1
src 6
dst 7
blk  [4,8) --from--(6)
CommOp  6 send <[4,8) --from--(6)> to 7
group  [4, 5, 6, 7]
node_index  7
offset  1
(node_index + len(group) - offset) % len(group)  2
src 7
dst 4
blk  [8,12) --from--(7)
CommOp  7 send <[8,12) --from--(7)> to 4
offset  2
group  [4, 5, 6, 7]
node_index  4
offset  2
(node_index + len(group) - offset) % len(group)  2
src 4
dst 5
blk  [8,12) --from--(4,7)
CommOp  4 send <[8,12) --from--(4,7)> to 5
group  [4, 5, 6, 7]
node_index  5
offset  2
(node_index + len(group) - offset) % len(group)  3
src 5
dst 6
blk  [12,16) --from--(5,4)
CommOp  5 send <[12,16) --from--(5,4)> to 6
group  [4, 5, 6, 7]
node_index  6
offset  2
(node_index + len(group) - offset) % len(group)  0
src 6
dst 7
blk  [0,4) --from--(6,5)
CommOp  6 send <[0,4) --from--(6,5)> to 7
group  [4, 5, 6, 7]
node_index  7
offset  2
(node_index + len(group) - offset) % len(group)  1
src 7
dst 4
blk  [4,8) --from--(7,6)
CommOp  7 send <[4,8) --from--(7,6)> to 4
offset  3
group  [4, 5, 6, 7]
node_index  4
offset  3
(node_index + len(group) - offset) % len(group)  1
src 4
dst 5
blk  [4,8) --from--(4,7,6)
CommOp  4 send <[4,8) --from--(4,7,6)> to 5
group  [4, 5, 6, 7]
node_index  5
offset  3
(node_index + len(group) - offset) % len(group)  2
src 5
dst 6
blk  [8,12) --from--(5,4,7)
CommOp  5 send <[8,12) --from--(5,4,7)> to 6
group  [4, 5, 6, 7]
node_index  6
offset  3
(node_index + len(group) - offset) % len(group)  3
src 6
dst 7
blk  [12,16) --from--(6,5,4)
CommOp  6 send <[12,16) --from--(6,5,4)> to 7
group  [4, 5, 6, 7]
node_index  7
offset  3
(node_index + len(group) - offset) % len(group)  0
src 7
dst 4
blk  [0,4) --from--(7,6,5)
CommOp  7 send <[0,4) --from--(7,6,5)> to 4
op  Ring: 4 send <[12,16) --from--(4)> to 5, 5 send <[0,4) --from--(5)> to 6, 6 send <[4,8) --from--(6)> to 7, 7 send <[8,12) --from--(7)> to 4; 4 send <[8,12) --from--(4,7)> to 5, 5 send <[12,16) --from--(5,4)> to 6, 6 send <[0,4) --from--(6,5)> to 7, 7 send <[4,8) --from--(7,6)> to 4; 4 send <[4,8) --from--(4,7,6)> to 5, 5 send <[8,12) --from--(5,4,7)> to 6, 6 send <[12,16) --from--(6,5,4)> to 7, 7 send <[0,4) --from--(7,6,5)> to 4
origin  [[DataBlock<[0,16) --from--(0)>], [DataBlock<[0,16) --from--(1)>], [DataBlock<[0,16) --from--(2)>], [DataBlock<[0,16) --from--(3)>], [DataBlock<[0,16) --from--(4)>], [DataBlock<[0,16) --from--(5)>], [DataBlock<[0,16) --from--(6)>], [DataBlock<[0,16) --from--(7)>], [DataBlock<[0,16) --from--(8)>], [DataBlock<[0,16) --from--(9)>], [DataBlock<[0,16) --from--(10)>], [DataBlock<[0,16) --from--(11)>], [DataBlock<[0,16) --from--(12)>], [DataBlock<[0,16) --from--(13)>], [DataBlock<[0,16) --from--(14)>], [DataBlock<[0,16) --from--(15)>]]
target  [[DataBlock<[0,4) --from--(0,1,2,3)>], [DataBlock<[4,8) --from--(0,1,2,3)>], [DataBlock<[8,12) --from--(0,1,2,3)>], [DataBlock<[12,16) --from--(0,1,2,3)>], [DataBlock<[0,4) --from--(4,5,6,7)>], [DataBlock<[4,8) --from--(4,5,6,7)>], [DataBlock<[8,12) --from--(4,5,6,7)>], [DataBlock<[12,16) --from--(4,5,6,7)>], [DataBlock<[0,4) --from--(8,9,10,11)>], [DataBlock<[4,8) --from--(8,9,10,11)>], [DataBlock<[8,12) --from--(8,9,10,11)>], [DataBlock<[12,16) --from--(8,9,10,11)>], [DataBlock<[0,4) --from--(12,13,14,15)>], [DataBlock<[4,8) --from--(12,13,14,15)>], [DataBlock<[8,12) --from--(12,13,14,15)>], [DataBlock<[12,16) --from--(12,13,14,15)>]]
353 target[ 8 ] before sort  [DataBlock<[0,4) --from--(8,9,10,11)>]
355 target[ 8 ] after sort  [DataBlock<[0,4) --from--(8,9,10,11)>]
353 target[ 9 ] before sort  [DataBlock<[4,8) --from--(8,9,10,11)>]
355 target[ 9 ] after sort  [DataBlock<[4,8) --from--(8,9,10,11)>]
353 target[ 10 ] before sort  [DataBlock<[8,12) --from--(8,9,10,11)>]
355 target[ 10 ] after sort  [DataBlock<[8,12) --from--(8,9,10,11)>]
353 target[ 11 ] before sort  [DataBlock<[12,16) --from--(8,9,10,11)>]
355 target[ 11 ] after sort  [DataBlock<[12,16) --from--(8,9,10,11)>]
RingOp i  9
origin[group[0]]  [DataBlock<[0,16) --from--(8)>]
origin[i]  [DataBlock<[0,16) --from--(9)>]
RingOp i  10
origin[group[0]]  [DataBlock<[0,16) --from--(8)>]
origin[i]  [DataBlock<[0,16) --from--(10)>]
RingOp i  11
origin[group[0]]  [DataBlock<[0,16) --from--(8)>]
origin[i]  [DataBlock<[0,16) --from--(11)>]
360 group  [8, 9, 10, 11]
362 target[i][0]  [12,16) --from--(8,9,10,11)
364 group  [8, 9, 10, 11]
block_template[ 0 ]  [DataBlock<[0,4)>]
block_template[ 1 ]  [DataBlock<[4,8)>]
block_template[ 2 ]  [DataBlock<[8,12)>]
block_template[ 3 ]  [DataBlock<[12,16)>]
offset  1
group  [8, 9, 10, 11]
node_index  8
offset  1
(node_index + len(group) - offset) % len(group)  3
src 8
dst 9
blk  [12,16) --from--(8)
CommOp  8 send <[12,16) --from--(8)> to 9
group  [8, 9, 10, 11]
node_index  9
offset  1
(node_index + len(group) - offset) % len(group)  0
src 9
dst 10
blk  [0,4) --from--(9)
CommOp  9 send <[0,4) --from--(9)> to 10
group  [8, 9, 10, 11]
node_index  10
offset  1
(node_index + len(group) - offset) % len(group)  1
src 10
dst 11
blk  [4,8) --from--(10)
CommOp  10 send <[4,8) --from--(10)> to 11
group  [8, 9, 10, 11]
node_index  11
offset  1
(node_index + len(group) - offset) % len(group)  2
src 11
dst 8
blk  [8,12) --from--(11)
CommOp  11 send <[8,12) --from--(11)> to 8
offset  2
group  [8, 9, 10, 11]
node_index  8
offset  2
(node_index + len(group) - offset) % len(group)  2
src 8
dst 9
blk  [8,12) --from--(8,11)
CommOp  8 send <[8,12) --from--(8,11)> to 9
group  [8, 9, 10, 11]
node_index  9
offset  2
(node_index + len(group) - offset) % len(group)  3
src 9
dst 10
blk  [12,16) --from--(9,8)
CommOp  9 send <[12,16) --from--(9,8)> to 10
group  [8, 9, 10, 11]
node_index  10
offset  2
(node_index + len(group) - offset) % len(group)  0
src 10
dst 11
blk  [0,4) --from--(10,9)
CommOp  10 send <[0,4) --from--(10,9)> to 11
group  [8, 9, 10, 11]
node_index  11
offset  2
(node_index + len(group) - offset) % len(group)  1
src 11
dst 8
blk  [4,8) --from--(11,10)
CommOp  11 send <[4,8) --from--(11,10)> to 8
offset  3
group  [8, 9, 10, 11]
node_index  8
offset  3
(node_index + len(group) - offset) % len(group)  1
src 8
dst 9
blk  [4,8) --from--(8,11,10)
CommOp  8 send <[4,8) --from--(8,11,10)> to 9
group  [8, 9, 10, 11]
node_index  9
offset  3
(node_index + len(group) - offset) % len(group)  2
src 9
dst 10
blk  [8,12) --from--(9,8,11)
CommOp  9 send <[8,12) --from--(9,8,11)> to 10
group  [8, 9, 10, 11]
node_index  10
offset  3
(node_index + len(group) - offset) % len(group)  3
src 10
dst 11
blk  [12,16) --from--(10,9,8)
CommOp  10 send <[12,16) --from--(10,9,8)> to 11
group  [8, 9, 10, 11]
node_index  11
offset  3
(node_index + len(group) - offset) % len(group)  0
src 11
dst 8
blk  [0,4) --from--(11,10,9)
CommOp  11 send <[0,4) --from--(11,10,9)> to 8
op  Ring: 8 send <[12,16) --from--(8)> to 9, 9 send <[0,4) --from--(9)> to 10, 10 send <[4,8) --from--(10)> to 11, 11 send <[8,12) --from--(11)> to 8; 8 send <[8,12) --from--(8,11)> to 9, 9 send <[12,16) --from--(9,8)> to 10, 10 send <[0,4) --from--(10,9)> to 11, 11 send <[4,8) --from--(11,10)> to 8; 8 send <[4,8) --from--(8,11,10)> to 9, 9 send <[8,12) --from--(9,8,11)> to 10, 10 send <[12,16) --from--(10,9,8)> to 11, 11 send <[0,4) --from--(11,10,9)> to 8
origin  [[DataBlock<[0,16) --from--(0)>], [DataBlock<[0,16) --from--(1)>], [DataBlock<[0,16) --from--(2)>], [DataBlock<[0,16) --from--(3)>], [DataBlock<[0,16) --from--(4)>], [DataBlock<[0,16) --from--(5)>], [DataBlock<[0,16) --from--(6)>], [DataBlock<[0,16) --from--(7)>], [DataBlock<[0,16) --from--(8)>], [DataBlock<[0,16) --from--(9)>], [DataBlock<[0,16) --from--(10)>], [DataBlock<[0,16) --from--(11)>], [DataBlock<[0,16) --from--(12)>], [DataBlock<[0,16) --from--(13)>], [DataBlock<[0,16) --from--(14)>], [DataBlock<[0,16) --from--(15)>]]
target  [[DataBlock<[0,4) --from--(0,1,2,3)>], [DataBlock<[4,8) --from--(0,1,2,3)>], [DataBlock<[8,12) --from--(0,1,2,3)>], [DataBlock<[12,16) --from--(0,1,2,3)>], [DataBlock<[0,4) --from--(4,5,6,7)>], [DataBlock<[4,8) --from--(4,5,6,7)>], [DataBlock<[8,12) --from--(4,5,6,7)>], [DataBlock<[12,16) --from--(4,5,6,7)>], [DataBlock<[0,4) --from--(8,9,10,11)>], [DataBlock<[4,8) --from--(8,9,10,11)>], [DataBlock<[8,12) --from--(8,9,10,11)>], [DataBlock<[12,16) --from--(8,9,10,11)>], [DataBlock<[0,4) --from--(12,13,14,15)>], [DataBlock<[4,8) --from--(12,13,14,15)>], [DataBlock<[8,12) --from--(12,13,14,15)>], [DataBlock<[12,16) --from--(12,13,14,15)>]]
353 target[ 12 ] before sort  [DataBlock<[0,4) --from--(12,13,14,15)>]
355 target[ 12 ] after sort  [DataBlock<[0,4) --from--(12,13,14,15)>]
353 target[ 13 ] before sort  [DataBlock<[4,8) --from--(12,13,14,15)>]
355 target[ 13 ] after sort  [DataBlock<[4,8) --from--(12,13,14,15)>]
353 target[ 14 ] before sort  [DataBlock<[8,12) --from--(12,13,14,15)>]
355 target[ 14 ] after sort  [DataBlock<[8,12) --from--(12,13,14,15)>]
353 target[ 15 ] before sort  [DataBlock<[12,16) --from--(12,13,14,15)>]
355 target[ 15 ] after sort  [DataBlock<[12,16) --from--(12,13,14,15)>]
RingOp i  13
origin[group[0]]  [DataBlock<[0,16) --from--(12)>]
origin[i]  [DataBlock<[0,16) --from--(13)>]
RingOp i  14
origin[group[0]]  [DataBlock<[0,16) --from--(12)>]
origin[i]  [DataBlock<[0,16) --from--(14)>]
RingOp i  15
origin[group[0]]  [DataBlock<[0,16) --from--(12)>]
origin[i]  [DataBlock<[0,16) --from--(15)>]
360 group  [12, 13, 14, 15]
362 target[i][0]  [12,16) --from--(12,13,14,15)
364 group  [12, 13, 14, 15]
block_template[ 0 ]  [DataBlock<[0,4)>]
block_template[ 1 ]  [DataBlock<[4,8)>]
block_template[ 2 ]  [DataBlock<[8,12)>]
block_template[ 3 ]  [DataBlock<[12,16)>]
offset  1
group  [12, 13, 14, 15]
node_index  12
offset  1
(node_index + len(group) - offset) % len(group)  3
src 12
dst 13
blk  [12,16) --from--(12)
CommOp  12 send <[12,16) --from--(12)> to 13
group  [12, 13, 14, 15]
node_index  13
offset  1
(node_index + len(group) - offset) % len(group)  0
src 13
dst 14
blk  [0,4) --from--(13)
CommOp  13 send <[0,4) --from--(13)> to 14
group  [12, 13, 14, 15]
node_index  14
offset  1
(node_index + len(group) - offset) % len(group)  1
src 14
dst 15
blk  [4,8) --from--(14)
CommOp  14 send <[4,8) --from--(14)> to 15
group  [12, 13, 14, 15]
node_index  15
offset  1
(node_index + len(group) - offset) % len(group)  2
src 15
dst 12
blk  [8,12) --from--(15)
CommOp  15 send <[8,12) --from--(15)> to 12
offset  2
group  [12, 13, 14, 15]
node_index  12
offset  2
(node_index + len(group) - offset) % len(group)  2
src 12
dst 13
blk  [8,12) --from--(12,15)
CommOp  12 send <[8,12) --from--(12,15)> to 13
group  [12, 13, 14, 15]
node_index  13
offset  2
(node_index + len(group) - offset) % len(group)  3
src 13
dst 14
blk  [12,16) --from--(13,12)
CommOp  13 send <[12,16) --from--(13,12)> to 14
group  [12, 13, 14, 15]
node_index  14
offset  2
(node_index + len(group) - offset) % len(group)  0
src 14
dst 15
blk  [0,4) --from--(14,13)
CommOp  14 send <[0,4) --from--(14,13)> to 15
group  [12, 13, 14, 15]
node_index  15
offset  2
(node_index + len(group) - offset) % len(group)  1
src 15
dst 12
blk  [4,8) --from--(15,14)
CommOp  15 send <[4,8) --from--(15,14)> to 12
offset  3
group  [12, 13, 14, 15]
node_index  12
offset  3
(node_index + len(group) - offset) % len(group)  1
src 12
dst 13
blk  [4,8) --from--(12,15,14)
CommOp  12 send <[4,8) --from--(12,15,14)> to 13
group  [12, 13, 14, 15]
node_index  13
offset  3
(node_index + len(group) - offset) % len(group)  2
src 13
dst 14
blk  [8,12) --from--(13,12,15)
CommOp  13 send <[8,12) --from--(13,12,15)> to 14
group  [12, 13, 14, 15]
node_index  14
offset  3
(node_index + len(group) - offset) % len(group)  3
src 14
dst 15
blk  [12,16) --from--(14,13,12)
CommOp  14 send <[12,16) --from--(14,13,12)> to 15
group  [12, 13, 14, 15]
node_index  15
offset  3
(node_index + len(group) - offset) % len(group)  0
src 15
dst 12
blk  [0,4) --from--(15,14,13)
CommOp  15 send <[0,4) --from--(15,14,13)> to 12
op  Ring: 12 send <[12,16) --from--(12)> to 13, 13 send <[0,4) --from--(13)> to 14, 14 send <[4,8) --from--(14)> to 15, 15 send <[8,12) --from--(15)> to 12; 12 send <[8,12) --from--(12,15)> to 13, 13 send <[12,16) --from--(13,12)> to 14, 14 send <[0,4) --from--(14,13)> to 15, 15 send <[4,8) --from--(15,14)> to 12; 12 send <[4,8) --from--(12,15,14)> to 13, 13 send <[8,12) --from--(13,12,15)> to 14, 14 send <[12,16) --from--(14,13,12)> to 15, 15 send <[0,4) --from--(15,14,13)> to 12
color  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
ans  [[0, 4], [1, 5], [2, 6], [3, 7], [8, 12], [9, 13], [10, 14], [11, 15]]
origin  [[DataBlock<[0,4) --from--(0,1,2,3)>], [DataBlock<[4,8) --from--(0,1,2,3)>], [DataBlock<[8,12) --from--(0,1,2,3)>], [DataBlock<[12,16) --from--(0,1,2,3)>], [DataBlock<[0,4) --from--(4,5,6,7)>], [DataBlock<[4,8) --from--(4,5,6,7)>], [DataBlock<[8,12) --from--(4,5,6,7)>], [DataBlock<[12,16) --from--(4,5,6,7)>], [DataBlock<[0,4) --from--(8,9,10,11)>], [DataBlock<[4,8) --from--(8,9,10,11)>], [DataBlock<[8,12) --from--(8,9,10,11)>], [DataBlock<[12,16) --from--(8,9,10,11)>], [DataBlock<[0,4) --from--(12,13,14,15)>], [DataBlock<[4,8) --from--(12,13,14,15)>], [DataBlock<[8,12) --from--(12,13,14,15)>], [DataBlock<[12,16) --from--(12,13,14,15)>]]
target  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]]
353 target[ 0 ] before sort  [DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>]
355 target[ 0 ] after sort  [DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>]
353 target[ 4 ] before sort  [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>]
355 target[ 4 ] after sort  [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>]
RingOp i  4
origin[group[0]]  [DataBlock<[0,4) --from--(0,1,2,3)>]
origin[i]  [DataBlock<[0,4) --from--(4,5,6,7)>]
360 group  [0, 4]
362 target[i][0]  [2,4) --from--(0,1,2,3,4,5,6,7)
364 group  [0, 4]
block_template[ 0 ]  [DataBlock<[0,2)>]
block_template[ 1 ]  [DataBlock<[2,4)>]
offset  1
group  [0, 4]
node_index  0
offset  1
(node_index + len(group) - offset) % len(group)  1
src 0
dst 4
blk  [2,4) --from--(0,1,2,3)
CommOp  0 send <[2,4) --from--(0,1,2,3)> to 4
group  [0, 4]
node_index  4
offset  1
(node_index + len(group) - offset) % len(group)  1
src 4
dst 0
blk  [0,2) --from--(4,5,6,7)
CommOp  4 send <[0,2) --from--(4,5,6,7)> to 0
op  Ring: 0 send <[2,4) --from--(0,1,2,3)> to 4, 4 send <[0,2) --from--(4,5,6,7)> to 0
origin  [[DataBlock<[0,4) --from--(0,1,2,3)>], [DataBlock<[4,8) --from--(0,1,2,3)>], [DataBlock<[8,12) --from--(0,1,2,3)>], [DataBlock<[12,16) --from--(0,1,2,3)>], [DataBlock<[0,4) --from--(4,5,6,7)>], [DataBlock<[4,8) --from--(4,5,6,7)>], [DataBlock<[8,12) --from--(4,5,6,7)>], [DataBlock<[12,16) --from--(4,5,6,7)>], [DataBlock<[0,4) --from--(8,9,10,11)>], [DataBlock<[4,8) --from--(8,9,10,11)>], [DataBlock<[8,12) --from--(8,9,10,11)>], [DataBlock<[12,16) --from--(8,9,10,11)>], [DataBlock<[0,4) --from--(12,13,14,15)>], [DataBlock<[4,8) --from--(12,13,14,15)>], [DataBlock<[8,12) --from--(12,13,14,15)>], [DataBlock<[12,16) --from--(12,13,14,15)>]]
target  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]]
353 target[ 1 ] before sort  [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>]
355 target[ 1 ] after sort  [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>]
353 target[ 5 ] before sort  [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>]
355 target[ 5 ] after sort  [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>]
RingOp i  5
origin[group[0]]  [DataBlock<[4,8) --from--(0,1,2,3)>]
origin[i]  [DataBlock<[4,8) --from--(4,5,6,7)>]
360 group  [1, 5]
362 target[i][0]  [4,6) --from--(0,1,2,3,4,5,6,7)
364 group  [5, 1]
block_template[ 0 ]  [DataBlock<[4,6)>]
block_template[ 1 ]  [DataBlock<[6,8)>]
offset  1
group  [5, 1]
node_index  5
offset  1
(node_index + len(group) - offset) % len(group)  0
src 5
dst 1
blk  [6,8) --from--(4,5,6,7)
CommOp  5 send <[6,8) --from--(4,5,6,7)> to 1
group  [5, 1]
node_index  1
offset  1
(node_index + len(group) - offset) % len(group)  0
src 1
dst 5
blk  [4,6) --from--(0,1,2,3)
CommOp  1 send <[4,6) --from--(0,1,2,3)> to 5
op  Ring: 5 send <[6,8) --from--(4,5,6,7)> to 1, 1 send <[4,6) --from--(0,1,2,3)> to 5
origin  [[DataBlock<[0,4) --from--(0,1,2,3)>], [DataBlock<[4,8) --from--(0,1,2,3)>], [DataBlock<[8,12) --from--(0,1,2,3)>], [DataBlock<[12,16) --from--(0,1,2,3)>], [DataBlock<[0,4) --from--(4,5,6,7)>], [DataBlock<[4,8) --from--(4,5,6,7)>], [DataBlock<[8,12) --from--(4,5,6,7)>], [DataBlock<[12,16) --from--(4,5,6,7)>], [DataBlock<[0,4) --from--(8,9,10,11)>], [DataBlock<[4,8) --from--(8,9,10,11)>], [DataBlock<[8,12) --from--(8,9,10,11)>], [DataBlock<[12,16) --from--(8,9,10,11)>], [DataBlock<[0,4) --from--(12,13,14,15)>], [DataBlock<[4,8) --from--(12,13,14,15)>], [DataBlock<[8,12) --from--(12,13,14,15)>], [DataBlock<[12,16) --from--(12,13,14,15)>]]
target  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]]
353 target[ 2 ] before sort  [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>]
355 target[ 2 ] after sort  [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>]
353 target[ 6 ] before sort  [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>]
355 target[ 6 ] after sort  [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>]
RingOp i  6
origin[group[0]]  [DataBlock<[8,12) --from--(0,1,2,3)>]
origin[i]  [DataBlock<[8,12) --from--(4,5,6,7)>]
360 group  [2, 6]
362 target[i][0]  [10,12) --from--(0,1,2,3,4,5,6,7)
364 group  [2, 6]
block_template[ 0 ]  [DataBlock<[8,10)>]
block_template[ 1 ]  [DataBlock<[10,12)>]
offset  1
group  [2, 6]
node_index  2
offset  1
(node_index + len(group) - offset) % len(group)  1
src 2
dst 6
blk  [10,12) --from--(0,1,2,3)
CommOp  2 send <[10,12) --from--(0,1,2,3)> to 6
group  [2, 6]
node_index  6
offset  1
(node_index + len(group) - offset) % len(group)  1
src 6
dst 2
blk  [8,10) --from--(4,5,6,7)
CommOp  6 send <[8,10) --from--(4,5,6,7)> to 2
op  Ring: 2 send <[10,12) --from--(0,1,2,3)> to 6, 6 send <[8,10) --from--(4,5,6,7)> to 2
origin  [[DataBlock<[0,4) --from--(0,1,2,3)>], [DataBlock<[4,8) --from--(0,1,2,3)>], [DataBlock<[8,12) --from--(0,1,2,3)>], [DataBlock<[12,16) --from--(0,1,2,3)>], [DataBlock<[0,4) --from--(4,5,6,7)>], [DataBlock<[4,8) --from--(4,5,6,7)>], [DataBlock<[8,12) --from--(4,5,6,7)>], [DataBlock<[12,16) --from--(4,5,6,7)>], [DataBlock<[0,4) --from--(8,9,10,11)>], [DataBlock<[4,8) --from--(8,9,10,11)>], [DataBlock<[8,12) --from--(8,9,10,11)>], [DataBlock<[12,16) --from--(8,9,10,11)>], [DataBlock<[0,4) --from--(12,13,14,15)>], [DataBlock<[4,8) --from--(12,13,14,15)>], [DataBlock<[8,12) --from--(12,13,14,15)>], [DataBlock<[12,16) --from--(12,13,14,15)>]]
target  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]]
353 target[ 3 ] before sort  [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>]
355 target[ 3 ] after sort  [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>]
353 target[ 7 ] before sort  [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>]
355 target[ 7 ] after sort  [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>]
RingOp i  7
origin[group[0]]  [DataBlock<[12,16) --from--(0,1,2,3)>]
origin[i]  [DataBlock<[12,16) --from--(4,5,6,7)>]
360 group  [3, 7]
362 target[i][0]  [12,14) --from--(0,1,2,3,4,5,6,7)
364 group  [7, 3]
block_template[ 0 ]  [DataBlock<[12,14)>]
block_template[ 1 ]  [DataBlock<[14,16)>]
offset  1
group  [7, 3]
node_index  7
offset  1
(node_index + len(group) - offset) % len(group)  0
src 7
dst 3
blk  [14,16) --from--(4,5,6,7)
CommOp  7 send <[14,16) --from--(4,5,6,7)> to 3
group  [7, 3]
node_index  3
offset  1
(node_index + len(group) - offset) % len(group)  0
src 3
dst 7
blk  [12,14) --from--(0,1,2,3)
CommOp  3 send <[12,14) --from--(0,1,2,3)> to 7
op  Ring: 7 send <[14,16) --from--(4,5,6,7)> to 3, 3 send <[12,14) --from--(0,1,2,3)> to 7
origin  [[DataBlock<[0,4) --from--(0,1,2,3)>], [DataBlock<[4,8) --from--(0,1,2,3)>], [DataBlock<[8,12) --from--(0,1,2,3)>], [DataBlock<[12,16) --from--(0,1,2,3)>], [DataBlock<[0,4) --from--(4,5,6,7)>], [DataBlock<[4,8) --from--(4,5,6,7)>], [DataBlock<[8,12) --from--(4,5,6,7)>], [DataBlock<[12,16) --from--(4,5,6,7)>], [DataBlock<[0,4) --from--(8,9,10,11)>], [DataBlock<[4,8) --from--(8,9,10,11)>], [DataBlock<[8,12) --from--(8,9,10,11)>], [DataBlock<[12,16) --from--(8,9,10,11)>], [DataBlock<[0,4) --from--(12,13,14,15)>], [DataBlock<[4,8) --from--(12,13,14,15)>], [DataBlock<[8,12) --from--(12,13,14,15)>], [DataBlock<[12,16) --from--(12,13,14,15)>]]
target  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]]
353 target[ 8 ] before sort  [DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>]
355 target[ 8 ] after sort  [DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>]
353 target[ 12 ] before sort  [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>]
355 target[ 12 ] after sort  [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>]
RingOp i  12
origin[group[0]]  [DataBlock<[0,4) --from--(8,9,10,11)>]
origin[i]  [DataBlock<[0,4) --from--(12,13,14,15)>]
360 group  [8, 12]
362 target[i][0]  [2,4) --from--(8,9,10,11,12,13,14,15)
364 group  [8, 12]
block_template[ 0 ]  [DataBlock<[0,2)>]
block_template[ 1 ]  [DataBlock<[2,4)>]
offset  1
group  [8, 12]
node_index  8
offset  1
(node_index + len(group) - offset) % len(group)  1
src 8
dst 12
blk  [2,4) --from--(8,9,10,11)
CommOp  8 send <[2,4) --from--(8,9,10,11)> to 12
group  [8, 12]
node_index  12
offset  1
(node_index + len(group) - offset) % len(group)  1
src 12
dst 8
blk  [0,2) --from--(12,13,14,15)
CommOp  12 send <[0,2) --from--(12,13,14,15)> to 8
op  Ring: 8 send <[2,4) --from--(8,9,10,11)> to 12, 12 send <[0,2) --from--(12,13,14,15)> to 8
origin  [[DataBlock<[0,4) --from--(0,1,2,3)>], [DataBlock<[4,8) --from--(0,1,2,3)>], [DataBlock<[8,12) --from--(0,1,2,3)>], [DataBlock<[12,16) --from--(0,1,2,3)>], [DataBlock<[0,4) --from--(4,5,6,7)>], [DataBlock<[4,8) --from--(4,5,6,7)>], [DataBlock<[8,12) --from--(4,5,6,7)>], [DataBlock<[12,16) --from--(4,5,6,7)>], [DataBlock<[0,4) --from--(8,9,10,11)>], [DataBlock<[4,8) --from--(8,9,10,11)>], [DataBlock<[8,12) --from--(8,9,10,11)>], [DataBlock<[12,16) --from--(8,9,10,11)>], [DataBlock<[0,4) --from--(12,13,14,15)>], [DataBlock<[4,8) --from--(12,13,14,15)>], [DataBlock<[8,12) --from--(12,13,14,15)>], [DataBlock<[12,16) --from--(12,13,14,15)>]]
target  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]]
353 target[ 9 ] before sort  [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>]
355 target[ 9 ] after sort  [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>]
353 target[ 13 ] before sort  [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>]
355 target[ 13 ] after sort  [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>]
RingOp i  13
origin[group[0]]  [DataBlock<[4,8) --from--(8,9,10,11)>]
origin[i]  [DataBlock<[4,8) --from--(12,13,14,15)>]
360 group  [9, 13]
362 target[i][0]  [4,6) --from--(8,9,10,11,12,13,14,15)
364 group  [13, 9]
block_template[ 0 ]  [DataBlock<[4,6)>]
block_template[ 1 ]  [DataBlock<[6,8)>]
offset  1
group  [13, 9]
node_index  13
offset  1
(node_index + len(group) - offset) % len(group)  0
src 13
dst 9
blk  [6,8) --from--(12,13,14,15)
CommOp  13 send <[6,8) --from--(12,13,14,15)> to 9
group  [13, 9]
node_index  9
offset  1
(node_index + len(group) - offset) % len(group)  0
src 9
dst 13
blk  [4,6) --from--(8,9,10,11)
CommOp  9 send <[4,6) --from--(8,9,10,11)> to 13
op  Ring: 13 send <[6,8) --from--(12,13,14,15)> to 9, 9 send <[4,6) --from--(8,9,10,11)> to 13
origin  [[DataBlock<[0,4) --from--(0,1,2,3)>], [DataBlock<[4,8) --from--(0,1,2,3)>], [DataBlock<[8,12) --from--(0,1,2,3)>], [DataBlock<[12,16) --from--(0,1,2,3)>], [DataBlock<[0,4) --from--(4,5,6,7)>], [DataBlock<[4,8) --from--(4,5,6,7)>], [DataBlock<[8,12) --from--(4,5,6,7)>], [DataBlock<[12,16) --from--(4,5,6,7)>], [DataBlock<[0,4) --from--(8,9,10,11)>], [DataBlock<[4,8) --from--(8,9,10,11)>], [DataBlock<[8,12) --from--(8,9,10,11)>], [DataBlock<[12,16) --from--(8,9,10,11)>], [DataBlock<[0,4) --from--(12,13,14,15)>], [DataBlock<[4,8) --from--(12,13,14,15)>], [DataBlock<[8,12) --from--(12,13,14,15)>], [DataBlock<[12,16) --from--(12,13,14,15)>]]
target  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]]
353 target[ 10 ] before sort  [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>]
355 target[ 10 ] after sort  [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>]
353 target[ 14 ] before sort  [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>]
355 target[ 14 ] after sort  [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>]
RingOp i  14
origin[group[0]]  [DataBlock<[8,12) --from--(8,9,10,11)>]
origin[i]  [DataBlock<[8,12) --from--(12,13,14,15)>]
360 group  [10, 14]
362 target[i][0]  [10,12) --from--(8,9,10,11,12,13,14,15)
364 group  [10, 14]
block_template[ 0 ]  [DataBlock<[8,10)>]
block_template[ 1 ]  [DataBlock<[10,12)>]
offset  1
group  [10, 14]
node_index  10
offset  1
(node_index + len(group) - offset) % len(group)  1
src 10
dst 14
blk  [10,12) --from--(8,9,10,11)
CommOp  10 send <[10,12) --from--(8,9,10,11)> to 14
group  [10, 14]
node_index  14
offset  1
(node_index + len(group) - offset) % len(group)  1
src 14
dst 10
blk  [8,10) --from--(12,13,14,15)
CommOp  14 send <[8,10) --from--(12,13,14,15)> to 10
op  Ring: 10 send <[10,12) --from--(8,9,10,11)> to 14, 14 send <[8,10) --from--(12,13,14,15)> to 10
origin  [[DataBlock<[0,4) --from--(0,1,2,3)>], [DataBlock<[4,8) --from--(0,1,2,3)>], [DataBlock<[8,12) --from--(0,1,2,3)>], [DataBlock<[12,16) --from--(0,1,2,3)>], [DataBlock<[0,4) --from--(4,5,6,7)>], [DataBlock<[4,8) --from--(4,5,6,7)>], [DataBlock<[8,12) --from--(4,5,6,7)>], [DataBlock<[12,16) --from--(4,5,6,7)>], [DataBlock<[0,4) --from--(8,9,10,11)>], [DataBlock<[4,8) --from--(8,9,10,11)>], [DataBlock<[8,12) --from--(8,9,10,11)>], [DataBlock<[12,16) --from--(8,9,10,11)>], [DataBlock<[0,4) --from--(12,13,14,15)>], [DataBlock<[4,8) --from--(12,13,14,15)>], [DataBlock<[8,12) --from--(12,13,14,15)>], [DataBlock<[12,16) --from--(12,13,14,15)>]]
target  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]]
353 target[ 11 ] before sort  [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>]
355 target[ 11 ] after sort  [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>]
353 target[ 15 ] before sort  [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]
355 target[ 15 ] after sort  [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]
RingOp i  15
origin[group[0]]  [DataBlock<[12,16) --from--(8,9,10,11)>]
origin[i]  [DataBlock<[12,16) --from--(12,13,14,15)>]
360 group  [11, 15]
362 target[i][0]  [12,14) --from--(8,9,10,11,12,13,14,15)
364 group  [15, 11]
block_template[ 0 ]  [DataBlock<[12,14)>]
block_template[ 1 ]  [DataBlock<[14,16)>]
offset  1
group  [15, 11]
node_index  15
offset  1
(node_index + len(group) - offset) % len(group)  0
src 15
dst 11
blk  [14,16) --from--(12,13,14,15)
CommOp  15 send <[14,16) --from--(12,13,14,15)> to 11
group  [15, 11]
node_index  11
offset  1
(node_index + len(group) - offset) % len(group)  0
src 11
dst 15
blk  [12,14) --from--(8,9,10,11)
CommOp  11 send <[12,14) --from--(8,9,10,11)> to 15
op  Ring: 15 send <[14,16) --from--(12,13,14,15)> to 11, 11 send <[12,14) --from--(8,9,10,11)> to 15
color  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
ans  [[0, 8], [1, 9], [2, 10], [3, 11], [4, 12], [5, 13], [6, 14], [7, 15]]
origin  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]]
target  [[DataBlock<[0,1) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[7,8) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[8,9) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[15,16) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[3,4) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[4,5) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[11,12) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[12,13) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[1,2) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[6,7) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[9,10) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[14,15) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[2,3) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[5,6) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[10,11) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[13,14) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]]
353 target[ 0 ] before sort  [DataBlock<[0,1) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
355 target[ 0 ] after sort  [DataBlock<[0,1) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
353 target[ 8 ] before sort  [DataBlock<[1,2) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
355 target[ 8 ] after sort  [DataBlock<[1,2) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
RingOp i  8
origin[group[0]]  [DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>]
origin[i]  [DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>]
360 group  [0, 8]
362 target[i][0]  [1,2) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)
364 group  [0, 8]
block_template[ 0 ]  [DataBlock<[0,1)>]
block_template[ 1 ]  [DataBlock<[1,2)>]
offset  1
group  [0, 8]
node_index  0
offset  1
(node_index + len(group) - offset) % len(group)  1
src 0
dst 8
blk  [1,2) --from--(0,1,2,3,4,5,6,7)
CommOp  0 send <[1,2) --from--(0,1,2,3,4,5,6,7)> to 8
group  [0, 8]
node_index  8
offset  1
(node_index + len(group) - offset) % len(group)  1
src 8
dst 0
blk  [0,1) --from--(8,9,10,11,12,13,14,15)
CommOp  8 send <[0,1) --from--(8,9,10,11,12,13,14,15)> to 0
op  Ring: 0 send <[1,2) --from--(0,1,2,3,4,5,6,7)> to 8, 8 send <[0,1) --from--(8,9,10,11,12,13,14,15)> to 0
origin  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]]
target  [[DataBlock<[0,1) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[7,8) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[8,9) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[15,16) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[3,4) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[4,5) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[11,12) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[12,13) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[1,2) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[6,7) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[9,10) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[14,15) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[2,3) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[5,6) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[10,11) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[13,14) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]]
353 target[ 1 ] before sort  [DataBlock<[7,8) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
355 target[ 1 ] after sort  [DataBlock<[7,8) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
353 target[ 9 ] before sort  [DataBlock<[6,7) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
355 target[ 9 ] after sort  [DataBlock<[6,7) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
RingOp i  9
origin[group[0]]  [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>]
origin[i]  [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>]
360 group  [1, 9]
362 target[i][0]  [6,7) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)
364 group  [9, 1]
block_template[ 0 ]  [DataBlock<[6,7)>]
block_template[ 1 ]  [DataBlock<[7,8)>]
offset  1
group  [9, 1]
node_index  9
offset  1
(node_index + len(group) - offset) % len(group)  0
src 9
dst 1
blk  [7,8) --from--(8,9,10,11,12,13,14,15)
CommOp  9 send <[7,8) --from--(8,9,10,11,12,13,14,15)> to 1
group  [9, 1]
node_index  1
offset  1
(node_index + len(group) - offset) % len(group)  0
src 1
dst 9
blk  [6,7) --from--(0,1,2,3,4,5,6,7)
CommOp  1 send <[6,7) --from--(0,1,2,3,4,5,6,7)> to 9
op  Ring: 9 send <[7,8) --from--(8,9,10,11,12,13,14,15)> to 1, 1 send <[6,7) --from--(0,1,2,3,4,5,6,7)> to 9
origin  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]]
target  [[DataBlock<[0,1) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[7,8) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[8,9) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[15,16) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[3,4) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[4,5) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[11,12) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[12,13) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[1,2) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[6,7) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[9,10) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[14,15) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[2,3) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[5,6) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[10,11) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[13,14) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]]
353 target[ 2 ] before sort  [DataBlock<[8,9) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
355 target[ 2 ] after sort  [DataBlock<[8,9) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
353 target[ 10 ] before sort  [DataBlock<[9,10) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
355 target[ 10 ] after sort  [DataBlock<[9,10) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
RingOp i  10
origin[group[0]]  [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>]
origin[i]  [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>]
360 group  [2, 10]
362 target[i][0]  [9,10) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)
364 group  [2, 10]
block_template[ 0 ]  [DataBlock<[8,9)>]
block_template[ 1 ]  [DataBlock<[9,10)>]
offset  1
group  [2, 10]
node_index  2
offset  1
(node_index + len(group) - offset) % len(group)  1
src 2
dst 10
blk  [9,10) --from--(0,1,2,3,4,5,6,7)
CommOp  2 send <[9,10) --from--(0,1,2,3,4,5,6,7)> to 10
group  [2, 10]
node_index  10
offset  1
(node_index + len(group) - offset) % len(group)  1
src 10
dst 2
blk  [8,9) --from--(8,9,10,11,12,13,14,15)
CommOp  10 send <[8,9) --from--(8,9,10,11,12,13,14,15)> to 2
op  Ring: 2 send <[9,10) --from--(0,1,2,3,4,5,6,7)> to 10, 10 send <[8,9) --from--(8,9,10,11,12,13,14,15)> to 2
origin  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]]
target  [[DataBlock<[0,1) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[7,8) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[8,9) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[15,16) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[3,4) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[4,5) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[11,12) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[12,13) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[1,2) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[6,7) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[9,10) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[14,15) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[2,3) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[5,6) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[10,11) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[13,14) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]]
353 target[ 3 ] before sort  [DataBlock<[15,16) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
355 target[ 3 ] after sort  [DataBlock<[15,16) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
353 target[ 11 ] before sort  [DataBlock<[14,15) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
355 target[ 11 ] after sort  [DataBlock<[14,15) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
RingOp i  11
origin[group[0]]  [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>]
origin[i]  [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>]
360 group  [3, 11]
362 target[i][0]  [14,15) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)
364 group  [11, 3]
block_template[ 0 ]  [DataBlock<[14,15)>]
block_template[ 1 ]  [DataBlock<[15,16)>]
offset  1
group  [11, 3]
node_index  11
offset  1
(node_index + len(group) - offset) % len(group)  0
src 11
dst 3
blk  [15,16) --from--(8,9,10,11,12,13,14,15)
CommOp  11 send <[15,16) --from--(8,9,10,11,12,13,14,15)> to 3
group  [11, 3]
node_index  3
offset  1
(node_index + len(group) - offset) % len(group)  0
src 3
dst 11
blk  [14,15) --from--(0,1,2,3,4,5,6,7)
CommOp  3 send <[14,15) --from--(0,1,2,3,4,5,6,7)> to 11
op  Ring: 11 send <[15,16) --from--(8,9,10,11,12,13,14,15)> to 3, 3 send <[14,15) --from--(0,1,2,3,4,5,6,7)> to 11
origin  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]]
target  [[DataBlock<[0,1) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[7,8) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[8,9) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[15,16) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[3,4) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[4,5) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[11,12) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[12,13) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[1,2) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[6,7) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[9,10) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[14,15) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[2,3) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[5,6) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[10,11) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[13,14) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]]
353 target[ 4 ] before sort  [DataBlock<[3,4) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
355 target[ 4 ] after sort  [DataBlock<[3,4) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
353 target[ 12 ] before sort  [DataBlock<[2,3) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
355 target[ 12 ] after sort  [DataBlock<[2,3) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
RingOp i  12
origin[group[0]]  [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>]
origin[i]  [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>]
360 group  [4, 12]
362 target[i][0]  [2,3) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)
364 group  [12, 4]
block_template[ 0 ]  [DataBlock<[2,3)>]
block_template[ 1 ]  [DataBlock<[3,4)>]
offset  1
group  [12, 4]
node_index  12
offset  1
(node_index + len(group) - offset) % len(group)  1
src 12
dst 4
blk  [3,4) --from--(8,9,10,11,12,13,14,15)
CommOp  12 send <[3,4) --from--(8,9,10,11,12,13,14,15)> to 4
group  [12, 4]
node_index  4
offset  1
(node_index + len(group) - offset) % len(group)  1
src 4
dst 12
blk  [2,3) --from--(0,1,2,3,4,5,6,7)
CommOp  4 send <[2,3) --from--(0,1,2,3,4,5,6,7)> to 12
op  Ring: 12 send <[3,4) --from--(8,9,10,11,12,13,14,15)> to 4, 4 send <[2,3) --from--(0,1,2,3,4,5,6,7)> to 12
origin  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]]
target  [[DataBlock<[0,1) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[7,8) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[8,9) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[15,16) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[3,4) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[4,5) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[11,12) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[12,13) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[1,2) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[6,7) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[9,10) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[14,15) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[2,3) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[5,6) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[10,11) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[13,14) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]]
353 target[ 5 ] before sort  [DataBlock<[4,5) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
355 target[ 5 ] after sort  [DataBlock<[4,5) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
353 target[ 13 ] before sort  [DataBlock<[5,6) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
355 target[ 13 ] after sort  [DataBlock<[5,6) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
RingOp i  13
origin[group[0]]  [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>]
origin[i]  [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>]
360 group  [5, 13]
362 target[i][0]  [5,6) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)
364 group  [5, 13]
block_template[ 0 ]  [DataBlock<[4,5)>]
block_template[ 1 ]  [DataBlock<[5,6)>]
offset  1
group  [5, 13]
node_index  5
offset  1
(node_index + len(group) - offset) % len(group)  0
src 5
dst 13
blk  [5,6) --from--(0,1,2,3,4,5,6,7)
CommOp  5 send <[5,6) --from--(0,1,2,3,4,5,6,7)> to 13
group  [5, 13]
node_index  13
offset  1
(node_index + len(group) - offset) % len(group)  0
src 13
dst 5
blk  [4,5) --from--(8,9,10,11,12,13,14,15)
CommOp  13 send <[4,5) --from--(8,9,10,11,12,13,14,15)> to 5
op  Ring: 5 send <[5,6) --from--(0,1,2,3,4,5,6,7)> to 13, 13 send <[4,5) --from--(8,9,10,11,12,13,14,15)> to 5
origin  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]]
target  [[DataBlock<[0,1) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[7,8) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[8,9) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[15,16) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[3,4) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[4,5) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[11,12) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[12,13) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[1,2) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[6,7) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[9,10) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[14,15) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[2,3) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[5,6) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[10,11) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[13,14) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]]
353 target[ 6 ] before sort  [DataBlock<[11,12) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
355 target[ 6 ] after sort  [DataBlock<[11,12) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
353 target[ 14 ] before sort  [DataBlock<[10,11) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
355 target[ 14 ] after sort  [DataBlock<[10,11) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
RingOp i  14
origin[group[0]]  [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>]
origin[i]  [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>]
360 group  [6, 14]
362 target[i][0]  [10,11) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)
364 group  [14, 6]
block_template[ 0 ]  [DataBlock<[10,11)>]
block_template[ 1 ]  [DataBlock<[11,12)>]
offset  1
group  [14, 6]
node_index  14
offset  1
(node_index + len(group) - offset) % len(group)  1
src 14
dst 6
blk  [11,12) --from--(8,9,10,11,12,13,14,15)
CommOp  14 send <[11,12) --from--(8,9,10,11,12,13,14,15)> to 6
group  [14, 6]
node_index  6
offset  1
(node_index + len(group) - offset) % len(group)  1
src 6
dst 14
blk  [10,11) --from--(0,1,2,3,4,5,6,7)
CommOp  6 send <[10,11) --from--(0,1,2,3,4,5,6,7)> to 14
op  Ring: 14 send <[11,12) --from--(8,9,10,11,12,13,14,15)> to 6, 6 send <[10,11) --from--(0,1,2,3,4,5,6,7)> to 14
origin  [[DataBlock<[0,2) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[6,8) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[8,10) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[14,16) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[2,4) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[4,6) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[10,12) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>], [DataBlock<[0,2) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[6,8) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[8,10) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[14,16) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[2,4) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[4,6) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[10,12) --from--(8,9,10,11,12,13,14,15)>], [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]]
target  [[DataBlock<[0,1) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[7,8) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[8,9) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[15,16) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[3,4) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[4,5) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[11,12) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[12,13) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[1,2) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[6,7) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[9,10) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[14,15) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[2,3) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[5,6) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[10,11) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>], [DataBlock<[13,14) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]]
353 target[ 7 ] before sort  [DataBlock<[12,13) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
355 target[ 7 ] after sort  [DataBlock<[12,13) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
353 target[ 15 ] before sort  [DataBlock<[13,14) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
355 target[ 15 ] after sort  [DataBlock<[13,14) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)>]
RingOp i  15
origin[group[0]]  [DataBlock<[12,14) --from--(0,1,2,3,4,5,6,7)>]
origin[i]  [DataBlock<[12,14) --from--(8,9,10,11,12,13,14,15)>]
360 group  [7, 15]
362 target[i][0]  [13,14) --from--(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)
364 group  [7, 15]
block_template[ 0 ]  [DataBlock<[12,13)>]
block_template[ 1 ]  [DataBlock<[13,14)>]
offset  1
group  [7, 15]
node_index  7
offset  1
(node_index + len(group) - offset) % len(group)  0
src 7
dst 15
blk  [13,14) --from--(0,1,2,3,4,5,6,7)
CommOp  7 send <[13,14) --from--(0,1,2,3,4,5,6,7)> to 15
group  [7, 15]
node_index  15
offset  1
(node_index + len(group) - offset) % len(group)  0
src 15
dst 7
blk  [12,13) --from--(8,9,10,11,12,13,14,15)
CommOp  15 send <[12,13) --from--(8,9,10,11,12,13,14,15)> to 7
op  Ring: 7 send <[13,14) --from--(0,1,2,3,4,5,6,7)> to 15, 15 send <[12,13) --from--(8,9,10,11,12,13,14,15)> to 7
quit
Reduce-scatter step schedules on symmetry (((0,1,2,3),(4,5,6,7)),((8,9,10,11),(12,13,14,15)))
Step Schedule 0
Step schedule
> Step 0
Ring: 0 send <[12,16) --from--(0)> to 1, 1 send <[0,4) --from--(1)> to 2, 2 send <[4,8) --from--(2)> to 3, 3 send <[8,12) --from--(3)> to 0; 0 send <[8,12) --from--(0,3)> to 1, 1 send <[12,16) --from--(1,0)> to 2, 2 send <[0,4) --from--(2,1)> to 3, 3 send <[4,8) --from--(3,2)> to 0; 0 send <[4,8) --from--(0,3,2)> to 1, 1 send <[8,12) --from--(1,0,3)> to 2, 2 send <[12,16) --from--(2,1,0)> to 3, 3 send <[0,4) --from--(3,2,1)> to 0
Ring: 4 send <[12,16) --from--(4)> to 5, 5 send <[0,4) --from--(5)> to 6, 6 send <[4,8) --from--(6)> to 7, 7 send <[8,12) --from--(7)> to 4; 4 send <[8,12) --from--(4,7)> to 5, 5 send <[12,16) --from--(5,4)> to 6, 6 send <[0,4) --from--(6,5)> to 7, 7 send <[4,8) --from--(7,6)> to 4; 4 send <[4,8) --from--(4,7,6)> to 5, 5 send <[8,12) --from--(5,4,7)> to 6, 6 send <[12,16) --from--(6,5,4)> to 7, 7 send <[0,4) --from--(7,6,5)> to 4
Ring: 8 send <[12,16) --from--(8)> to 9, 9 send <[0,4) --from--(9)> to 10, 10 send <[4,8) --from--(10)> to 11, 11 send <[8,12) --from--(11)> to 8; 8 send <[8,12) --from--(8,11)> to 9, 9 send <[12,16) --from--(9,8)> to 10, 10 send <[0,4) --from--(10,9)> to 11, 11 send <[4,8) --from--(11,10)> to 8; 8 send <[4,8) --from--(8,11,10)> to 9, 9 send <[8,12) --from--(9,8,11)> to 10, 10 send <[12,16) --from--(10,9,8)> to 11, 11 send <[0,4) --from--(11,10,9)> to 8
Ring: 12 send <[12,16) --from--(12)> to 13, 13 send <[0,4) --from--(13)> to 14, 14 send <[4,8) --from--(14)> to 15, 15 send <[8,12) --from--(15)> to 12; 12 send <[8,12) --from--(12,15)> to 13, 13 send <[12,16) --from--(13,12)> to 14, 14 send <[0,4) --from--(14,13)> to 15, 15 send <[4,8) --from--(15,14)> to 12; 12 send <[4,8) --from--(12,15,14)> to 13, 13 send <[8,12) --from--(13,12,15)> to 14, 14 send <[12,16) --from--(14,13,12)> to 15, 15 send <[0,4) --from--(15,14,13)> to 12
> Step 1
Ring: 0 send <[2,4) --from--(0,1,2,3)> to 4, 4 send <[0,2) --from--(4,5,6,7)> to 0
Ring: 5 send <[6,8) --from--(4,5,6,7)> to 1, 1 send <[4,6) --from--(0,1,2,3)> to 5
Ring: 2 send <[10,12) --from--(0,1,2,3)> to 6, 6 send <[8,10) --from--(4,5,6,7)> to 2
Ring: 7 send <[14,16) --from--(4,5,6,7)> to 3, 3 send <[12,14) --from--(0,1,2,3)> to 7
Ring: 8 send <[2,4) --from--(8,9,10,11)> to 12, 12 send <[0,2) --from--(12,13,14,15)> to 8
Ring: 13 send <[6,8) --from--(12,13,14,15)> to 9, 9 send <[4,6) --from--(8,9,10,11)> to 13
Ring: 10 send <[10,12) --from--(8,9,10,11)> to 14, 14 send <[8,10) --from--(12,13,14,15)> to 10
Ring: 15 send <[14,16) --from--(12,13,14,15)> to 11, 11 send <[12,14) --from--(8,9,10,11)> to 15
> Step 2
Ring: 0 send <[1,2) --from--(0,1,2,3,4,5,6,7)> to 8, 8 send <[0,1) --from--(8,9,10,11,12,13,14,15)> to 0
Ring: 9 send <[7,8) --from--(8,9,10,11,12,13,14,15)> to 1, 1 send <[6,7) --from--(0,1,2,3,4,5,6,7)> to 9
Ring: 2 send <[9,10) --from--(0,1,2,3,4,5,6,7)> to 10, 10 send <[8,9) --from--(8,9,10,11,12,13,14,15)> to 2
Ring: 11 send <[15,16) --from--(8,9,10,11,12,13,14,15)> to 3, 3 send <[14,15) --from--(0,1,2,3,4,5,6,7)> to 11
Ring: 12 send <[3,4) --from--(8,9,10,11,12,13,14,15)> to 4, 4 send <[2,3) --from--(0,1,2,3,4,5,6,7)> to 12
Ring: 5 send <[5,6) --from--(0,1,2,3,4,5,6,7)> to 13, 13 send <[4,5) --from--(8,9,10,11,12,13,14,15)> to 5
Ring: 14 send <[11,12) --from--(8,9,10,11,12,13,14,15)> to 6, 6 send <[10,11) --from--(0,1,2,3,4,5,6,7)> to 14
Ring: 7 send <[13,14) --from--(0,1,2,3,4,5,6,7)> to 15, 15 send <[12,13) --from--(8,9,10,11,12,13,14,15)> to 7
---- one round ----
create a chunk:  0 send data from addr 12  size  4 to 1
create a chunk:  1 send data from addr 0  size  4 to 2
create a chunk:  2 send data from addr 4  size  4 to 3
create a chunk:  3 send data from addr 8  size  4 to 0
---- one round ----
create a chunk:  0 send data from addr 8  size  4 to 1
create a chunk:  1 send data from addr 12  size  4 to 2
create a chunk:  2 send data from addr 0  size  4 to 3
create a chunk:  3 send data from addr 4  size  4 to 0
---- one round ----
create a chunk:  0 send data from addr 4  size  4 to 1
create a chunk:  1 send data from addr 8  size  4 to 2
create a chunk:  2 send data from addr 12  size  4 to 3
create a chunk:  3 send data from addr 0  size  4 to 0
---- one round ----
create a chunk:  4 send data from addr 12  size  4 to 5
create a chunk:  5 send data from addr 0  size  4 to 6
create a chunk:  6 send data from addr 4  size  4 to 7
create a chunk:  7 send data from addr 8  size  4 to 4
---- one round ----
create a chunk:  4 send data from addr 8  size  4 to 5
create a chunk:  5 send data from addr 12  size  4 to 6
create a chunk:  6 send data from addr 0  size  4 to 7
create a chunk:  7 send data from addr 4  size  4 to 4
---- one round ----
create a chunk:  4 send data from addr 4  size  4 to 5
create a chunk:  5 send data from addr 8  size  4 to 6
create a chunk:  6 send data from addr 12  size  4 to 7
create a chunk:  7 send data from addr 0  size  4 to 4
---- one round ----
create a chunk:  8 send data from addr 12  size  4 to 9
create a chunk:  9 send data from addr 0  size  4 to 10
create a chunk:  10 send data from addr 4  size  4 to 11
create a chunk:  11 send data from addr 8  size  4 to 8
---- one round ----
create a chunk:  8 send data from addr 8  size  4 to 9
create a chunk:  9 send data from addr 12  size  4 to 10
create a chunk:  10 send data from addr 0  size  4 to 11
create a chunk:  11 send data from addr 4  size  4 to 8
---- one round ----
create a chunk:  8 send data from addr 4  size  4 to 9
create a chunk:  9 send data from addr 8  size  4 to 10
create a chunk:  10 send data from addr 12  size  4 to 11
create a chunk:  11 send data from addr 0  size  4 to 8
---- one round ----
create a chunk:  12 send data from addr 12  size  4 to 13
create a chunk:  13 send data from addr 0  size  4 to 14
create a chunk:  14 send data from addr 4  size  4 to 15
create a chunk:  15 send data from addr 8  size  4 to 12
---- one round ----
create a chunk:  12 send data from addr 8  size  4 to 13
create a chunk:  13 send data from addr 12  size  4 to 14
create a chunk:  14 send data from addr 0  size  4 to 15
create a chunk:  15 send data from addr 4  size  4 to 12
---- one round ----
create a chunk:  12 send data from addr 4  size  4 to 13
create a chunk:  13 send data from addr 8  size  4 to 14
create a chunk:  14 send data from addr 12  size  4 to 15
create a chunk:  15 send data from addr 0  size  4 to 12
---- one round ----
create a chunk:  0 send data from addr 2  size  2 to 4
create a chunk:  4 send data from addr 0  size  2 to 0
---- one round ----
create a chunk:  5 send data from addr 6  size  2 to 1
create a chunk:  1 send data from addr 4  size  2 to 5
---- one round ----
create a chunk:  2 send data from addr 10  size  2 to 6
create a chunk:  6 send data from addr 8  size  2 to 2
---- one round ----
create a chunk:  7 send data from addr 14  size  2 to 3
create a chunk:  3 send data from addr 12  size  2 to 7
---- one round ----
create a chunk:  8 send data from addr 2  size  2 to 12
create a chunk:  12 send data from addr 0  size  2 to 8
---- one round ----
create a chunk:  13 send data from addr 6  size  2 to 9
create a chunk:  9 send data from addr 4  size  2 to 13
---- one round ----
create a chunk:  10 send data from addr 10  size  2 to 14
create a chunk:  14 send data from addr 8  size  2 to 10
---- one round ----
create a chunk:  15 send data from addr 14  size  2 to 11
create a chunk:  11 send data from addr 12  size  2 to 15
---- one round ----
create a chunk:  0 send data from addr 1  size  1 to 8
create a chunk:  8 send data from addr 0  size  1 to 0
---- one round ----
create a chunk:  9 send data from addr 7  size  1 to 1
create a chunk:  1 send data from addr 6  size  1 to 9
---- one round ----
create a chunk:  2 send data from addr 9  size  1 to 10
create a chunk:  10 send data from addr 8  size  1 to 2
---- one round ----
create a chunk:  11 send data from addr 15  size  1 to 3
create a chunk:  3 send data from addr 14  size  1 to 11
---- one round ----
create a chunk:  12 send data from addr 3  size  1 to 4
create a chunk:  4 send data from addr 2  size  1 to 12
---- one round ----
create a chunk:  5 send data from addr 5  size  1 to 13
create a chunk:  13 send data from addr 4  size  1 to 5
---- one round ----
create a chunk:  14 send data from addr 11  size  1 to 6
create a chunk:  6 send data from addr 10  size  1 to 14
---- one round ----
create a chunk:  7 send data from addr 13  size  1 to 15
create a chunk:  15 send data from addr 12  size  1 to 7
<algo name="reducescatter_neogen" proto="Simple" nchannels="4" nchunksperloop="16" ngpus="16" coll="reduce_scatter" inplace="1">
  <gpu id="0" i_chunks="16" o_chunks="0" s_chunks="0">
    <tb id="0" send="-1" recv="3" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="4" depid="-1" deps="-1" hasdep="1"/>
    </tb>
    <tb id="1" send="-1" recv="4" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="2" depid="0" deps="0" hasdep="1"/>
    </tb>
    <tb id="2" send="-1" recv="8" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="1" depid="1" deps="0" hasdep="0"/>
    </tb>
    <tb id="3" send="1" recv="-1" chan="3">
      <step s="0" type="s" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="4" send="1" recv="3" chan="1">
      <step s="0" type="rrcs" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="5" send="1" recv="3" chan="2">
      <step s="0" type="rrcs" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="6" send="4" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="2" dstbuf="i" dstoff="2" cnt="2" depid="0" deps="0" hasdep="0"/>
    </tb>
    <tb id="7" send="8" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="1" dstbuf="i" dstoff="1" cnt="1" depid="1" deps="0" hasdep="0"/>
    </tb>
  </gpu>
  <gpu id="1" i_chunks="16" o_chunks="0" s_chunks="0">
    <tb id="0" send="-1" recv="0" chan="1">
      <step s="0" type="rrc" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="4" depid="-1" deps="-1" hasdep="1"/>
    </tb>
    <tb id="1" send="-1" recv="5" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="6" dstbuf="i" dstoff="6" cnt="2" depid="0" deps="0" hasdep="1"/>
    </tb>
    <tb id="2" send="-1" recv="9" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="7" dstbuf="i" dstoff="7" cnt="1" depid="1" deps="0" hasdep="0"/>
    </tb>
    <tb id="3" send="2" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="4" send="2" recv="0" chan="2">
      <step s="0" type="rrcs" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="5" send="2" recv="0" chan="3">
      <step s="0" type="rrcs" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="6" send="5" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="2" depid="0" deps="0" hasdep="0"/>
    </tb>
    <tb id="7" send="9" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="6" dstbuf="i" dstoff="6" cnt="1" depid="1" deps="0" hasdep="0"/>
    </tb>
  </gpu>
  <gpu id="2" i_chunks="16" o_chunks="0" s_chunks="0">
    <tb id="0" send="-1" recv="1" chan="2">
      <step s="0" type="rrc" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="4" depid="-1" deps="-1" hasdep="1"/>
    </tb>
    <tb id="1" send="-1" recv="6" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="2" depid="0" deps="0" hasdep="1"/>
    </tb>
    <tb id="2" send="-1" recv="10" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="1" depid="1" deps="0" hasdep="0"/>
    </tb>
    <tb id="3" send="3" recv="-1" chan="1">
      <step s="0" type="s" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="4" send="3" recv="1" chan="0">
      <step s="0" type="rrcs" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="5" send="3" recv="1" chan="3">
      <step s="0" type="rrcs" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="6" send="6" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="10" dstbuf="i" dstoff="10" cnt="2" depid="0" deps="0" hasdep="0"/>
    </tb>
    <tb id="7" send="10" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="9" dstbuf="i" dstoff="9" cnt="1" depid="1" deps="0" hasdep="0"/>
    </tb>
  </gpu>
  <gpu id="3" i_chunks="16" o_chunks="0" s_chunks="0">
    <tb id="0" send="-1" recv="2" chan="3">
      <step s="0" type="rrc" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="4" depid="-1" deps="-1" hasdep="1"/>
    </tb>
    <tb id="1" send="-1" recv="7" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="14" dstbuf="i" dstoff="14" cnt="2" depid="0" deps="0" hasdep="1"/>
    </tb>
    <tb id="2" send="-1" recv="11" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="15" dstbuf="i" dstoff="15" cnt="1" depid="1" deps="0" hasdep="0"/>
    </tb>
    <tb id="3" send="0" recv="-1" chan="2">
      <step s="0" type="s" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="4" send="0" recv="2" chan="0">
      <step s="0" type="rrcs" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="5" send="0" recv="2" chan="1">
      <step s="0" type="rrcs" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="6" send="7" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="2" depid="0" deps="0" hasdep="0"/>
    </tb>
    <tb id="7" send="11" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="14" dstbuf="i" dstoff="14" cnt="1" depid="1" deps="0" hasdep="0"/>
    </tb>
  </gpu>
  <gpu id="4" i_chunks="16" o_chunks="0" s_chunks="0">
    <tb id="0" send="-1" recv="0" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="2" dstbuf="i" dstoff="2" cnt="2" depid="1" deps="0" hasdep="1"/>
    </tb>
    <tb id="1" send="-1" recv="7" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="4" depid="-1" deps="-1" hasdep="1"/>
    </tb>
    <tb id="2" send="-1" recv="12" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="3" dstbuf="i" dstoff="3" cnt="1" depid="0" deps="0" hasdep="0"/>
    </tb>
    <tb id="3" send="0" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="2" depid="1" deps="0" hasdep="0"/>
    </tb>
    <tb id="4" send="5" recv="-1" chan="3">
      <step s="0" type="s" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="5" send="5" recv="7" chan="1">
      <step s="0" type="rrcs" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="6" send="5" recv="7" chan="2">
      <step s="0" type="rrcs" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="7" send="12" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="2" dstbuf="i" dstoff="2" cnt="1" depid="0" deps="0" hasdep="0"/>
    </tb>
  </gpu>
  <gpu id="5" i_chunks="16" o_chunks="0" s_chunks="0">
    <tb id="0" send="-1" recv="1" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="2" depid="1" deps="0" hasdep="1"/>
    </tb>
    <tb id="1" send="-1" recv="4" chan="1">
      <step s="0" type="rrc" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="4" depid="-1" deps="-1" hasdep="1"/>
    </tb>
    <tb id="2" send="-1" recv="13" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="1" depid="0" deps="0" hasdep="0"/>
    </tb>
    <tb id="3" send="1" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="6" dstbuf="i" dstoff="6" cnt="2" depid="1" deps="0" hasdep="0"/>
    </tb>
    <tb id="4" send="6" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="5" send="6" recv="4" chan="2">
      <step s="0" type="rrcs" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="6" send="6" recv="4" chan="3">
      <step s="0" type="rrcs" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="7" send="13" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="5" dstbuf="i" dstoff="5" cnt="1" depid="0" deps="0" hasdep="0"/>
    </tb>
  </gpu>
  <gpu id="6" i_chunks="16" o_chunks="0" s_chunks="0">
    <tb id="0" send="-1" recv="2" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="10" dstbuf="i" dstoff="10" cnt="2" depid="1" deps="0" hasdep="1"/>
    </tb>
    <tb id="1" send="-1" recv="5" chan="2">
      <step s="0" type="rrc" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="4" depid="-1" deps="-1" hasdep="1"/>
    </tb>
    <tb id="2" send="-1" recv="14" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="11" dstbuf="i" dstoff="11" cnt="1" depid="0" deps="0" hasdep="0"/>
    </tb>
    <tb id="3" send="2" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="2" depid="1" deps="0" hasdep="0"/>
    </tb>
    <tb id="4" send="7" recv="-1" chan="1">
      <step s="0" type="s" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="5" send="7" recv="5" chan="0">
      <step s="0" type="rrcs" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="6" send="7" recv="5" chan="3">
      <step s="0" type="rrcs" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="7" send="14" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="10" dstbuf="i" dstoff="10" cnt="1" depid="0" deps="0" hasdep="0"/>
    </tb>
  </gpu>
  <gpu id="7" i_chunks="16" o_chunks="0" s_chunks="0">
    <tb id="0" send="-1" recv="3" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="2" depid="1" deps="0" hasdep="1"/>
    </tb>
    <tb id="1" send="-1" recv="6" chan="3">
      <step s="0" type="rrc" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="4" depid="-1" deps="-1" hasdep="1"/>
    </tb>
    <tb id="2" send="-1" recv="15" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="1" depid="0" deps="0" hasdep="0"/>
    </tb>
    <tb id="3" send="3" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="14" dstbuf="i" dstoff="14" cnt="2" depid="1" deps="0" hasdep="0"/>
    </tb>
    <tb id="4" send="4" recv="-1" chan="2">
      <step s="0" type="s" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="5" send="4" recv="6" chan="0">
      <step s="0" type="rrcs" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="6" send="4" recv="6" chan="1">
      <step s="0" type="rrcs" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="7" send="15" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="13" dstbuf="i" dstoff="13" cnt="1" depid="0" deps="0" hasdep="0"/>
    </tb>
  </gpu>
  <gpu id="8" i_chunks="16" o_chunks="0" s_chunks="0">
    <tb id="0" send="-1" recv="0" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="1" dstbuf="i" dstoff="1" cnt="1" depid="2" deps="0" hasdep="0"/>
    </tb>
    <tb id="1" send="-1" recv="11" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="4" depid="-1" deps="-1" hasdep="1"/>
    </tb>
    <tb id="2" send="-1" recv="12" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="2" depid="1" deps="0" hasdep="1"/>
    </tb>
    <tb id="3" send="0" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="1" depid="2" deps="0" hasdep="0"/>
    </tb>
    <tb id="4" send="9" recv="-1" chan="3">
      <step s="0" type="s" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="5" send="9" recv="11" chan="1">
      <step s="0" type="rrcs" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="6" send="9" recv="11" chan="2">
      <step s="0" type="rrcs" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="7" send="12" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="2" dstbuf="i" dstoff="2" cnt="2" depid="1" deps="0" hasdep="0"/>
    </tb>
  </gpu>
  <gpu id="9" i_chunks="16" o_chunks="0" s_chunks="0">
    <tb id="0" send="-1" recv="1" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="6" dstbuf="i" dstoff="6" cnt="1" depid="2" deps="0" hasdep="0"/>
    </tb>
    <tb id="1" send="-1" recv="8" chan="1">
      <step s="0" type="rrc" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="4" depid="-1" deps="-1" hasdep="1"/>
    </tb>
    <tb id="2" send="-1" recv="13" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="6" dstbuf="i" dstoff="6" cnt="2" depid="1" deps="0" hasdep="1"/>
    </tb>
    <tb id="3" send="1" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="7" dstbuf="i" dstoff="7" cnt="1" depid="2" deps="0" hasdep="0"/>
    </tb>
    <tb id="4" send="10" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="5" send="10" recv="8" chan="2">
      <step s="0" type="rrcs" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="6" send="10" recv="8" chan="3">
      <step s="0" type="rrcs" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="7" send="13" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="2" depid="1" deps="0" hasdep="0"/>
    </tb>
  </gpu>
  <gpu id="10" i_chunks="16" o_chunks="0" s_chunks="0">
    <tb id="0" send="-1" recv="2" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="9" dstbuf="i" dstoff="9" cnt="1" depid="2" deps="0" hasdep="0"/>
    </tb>
    <tb id="1" send="-1" recv="9" chan="2">
      <step s="0" type="rrc" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="4" depid="-1" deps="-1" hasdep="1"/>
    </tb>
    <tb id="2" send="-1" recv="14" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="2" depid="1" deps="0" hasdep="1"/>
    </tb>
    <tb id="3" send="2" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="1" depid="2" deps="0" hasdep="0"/>
    </tb>
    <tb id="4" send="11" recv="-1" chan="1">
      <step s="0" type="s" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="5" send="11" recv="9" chan="0">
      <step s="0" type="rrcs" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="6" send="11" recv="9" chan="3">
      <step s="0" type="rrcs" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="7" send="14" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="10" dstbuf="i" dstoff="10" cnt="2" depid="1" deps="0" hasdep="0"/>
    </tb>
  </gpu>
  <gpu id="11" i_chunks="16" o_chunks="0" s_chunks="0">
    <tb id="0" send="-1" recv="3" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="14" dstbuf="i" dstoff="14" cnt="1" depid="2" deps="0" hasdep="0"/>
    </tb>
    <tb id="1" send="-1" recv="10" chan="3">
      <step s="0" type="rrc" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="4" depid="-1" deps="-1" hasdep="1"/>
    </tb>
    <tb id="2" send="-1" recv="15" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="14" dstbuf="i" dstoff="14" cnt="2" depid="1" deps="0" hasdep="1"/>
    </tb>
    <tb id="3" send="3" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="15" dstbuf="i" dstoff="15" cnt="1" depid="2" deps="0" hasdep="0"/>
    </tb>
    <tb id="4" send="8" recv="-1" chan="2">
      <step s="0" type="s" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="5" send="8" recv="10" chan="0">
      <step s="0" type="rrcs" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="6" send="8" recv="10" chan="1">
      <step s="0" type="rrcs" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="7" send="15" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="2" depid="1" deps="0" hasdep="0"/>
    </tb>
  </gpu>
  <gpu id="12" i_chunks="16" o_chunks="0" s_chunks="0">
    <tb id="0" send="-1" recv="4" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="2" dstbuf="i" dstoff="2" cnt="1" depid="1" deps="0" hasdep="0"/>
    </tb>
    <tb id="1" send="-1" recv="8" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="2" dstbuf="i" dstoff="2" cnt="2" depid="2" deps="0" hasdep="1"/>
    </tb>
    <tb id="2" send="-1" recv="15" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="4" depid="-1" deps="-1" hasdep="1"/>
    </tb>
    <tb id="3" send="4" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="3" dstbuf="i" dstoff="3" cnt="1" depid="1" deps="0" hasdep="0"/>
    </tb>
    <tb id="4" send="8" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="2" depid="2" deps="0" hasdep="0"/>
    </tb>
    <tb id="5" send="13" recv="-1" chan="3">
      <step s="0" type="s" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="6" send="13" recv="15" chan="1">
      <step s="0" type="rrcs" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="7" send="13" recv="15" chan="2">
      <step s="0" type="rrcs" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
  </gpu>
  <gpu id="13" i_chunks="16" o_chunks="0" s_chunks="0">
    <tb id="0" send="-1" recv="5" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="5" dstbuf="i" dstoff="5" cnt="1" depid="1" deps="0" hasdep="0"/>
    </tb>
    <tb id="1" send="-1" recv="9" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="2" depid="2" deps="0" hasdep="1"/>
    </tb>
    <tb id="2" send="-1" recv="12" chan="1">
      <step s="0" type="rrc" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="4" depid="-1" deps="-1" hasdep="1"/>
    </tb>
    <tb id="3" send="5" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="1" depid="1" deps="0" hasdep="0"/>
    </tb>
    <tb id="4" send="9" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="6" dstbuf="i" dstoff="6" cnt="2" depid="2" deps="0" hasdep="0"/>
    </tb>
    <tb id="5" send="14" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="6" send="14" recv="12" chan="2">
      <step s="0" type="rrcs" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="7" send="14" recv="12" chan="3">
      <step s="0" type="rrcs" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
  </gpu>
  <gpu id="14" i_chunks="16" o_chunks="0" s_chunks="0">
    <tb id="0" send="-1" recv="6" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="10" dstbuf="i" dstoff="10" cnt="1" depid="1" deps="0" hasdep="0"/>
    </tb>
    <tb id="1" send="-1" recv="10" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="10" dstbuf="i" dstoff="10" cnt="2" depid="2" deps="0" hasdep="1"/>
    </tb>
    <tb id="2" send="-1" recv="13" chan="2">
      <step s="0" type="rrc" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="4" depid="-1" deps="-1" hasdep="1"/>
    </tb>
    <tb id="3" send="6" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="11" dstbuf="i" dstoff="11" cnt="1" depid="1" deps="0" hasdep="0"/>
    </tb>
    <tb id="4" send="10" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="2" depid="2" deps="0" hasdep="0"/>
    </tb>
    <tb id="5" send="15" recv="-1" chan="1">
      <step s="0" type="s" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="6" send="15" recv="13" chan="0">
      <step s="0" type="rrcs" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="7" send="15" recv="13" chan="3">
      <step s="0" type="rrcs" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
  </gpu>
  <gpu id="15" i_chunks="16" o_chunks="0" s_chunks="0">
    <tb id="0" send="-1" recv="7" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="13" dstbuf="i" dstoff="13" cnt="1" depid="1" deps="0" hasdep="0"/>
    </tb>
    <tb id="1" send="-1" recv="11" chan="0">
      <step s="0" type="rrc" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="2" depid="2" deps="0" hasdep="1"/>
    </tb>
    <tb id="2" send="-1" recv="14" chan="3">
      <step s="0" type="rrc" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="4" depid="-1" deps="-1" hasdep="1"/>
    </tb>
    <tb id="3" send="7" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="12" dstbuf="i" dstoff="12" cnt="1" depid="1" deps="0" hasdep="0"/>
    </tb>
    <tb id="4" send="11" recv="-1" chan="0">
      <step s="0" type="s" srcbuf="i" srcoff="14" dstbuf="i" dstoff="14" cnt="2" depid="2" deps="0" hasdep="0"/>
    </tb>
    <tb id="5" send="12" recv="-1" chan="2">
      <step s="0" type="s" srcbuf="i" srcoff="8" dstbuf="i" dstoff="8" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="6" send="12" recv="14" chan="0">
      <step s="0" type="rrcs" srcbuf="i" srcoff="0" dstbuf="i" dstoff="0" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
    <tb id="7" send="12" recv="14" chan="1">
      <step s="0" type="rrcs" srcbuf="i" srcoff="4" dstbuf="i" dstoff="4" cnt="4" depid="-1" deps="-1" hasdep="0"/>
    </tb>
  </gpu>
</algo>
Rank 1 chunk 1 is incorrect should be index 1 from all ranks given Chunk(origin_rank=1, origin_index=1, dst_rank=1, dst_index=0)
Rank 2 chunk 2 is incorrect should be index 2 from all ranks given ReduceChunk(creation_rank=2, chunks=[Chunk(origin_rank=1, origin_index=2, dst_rank=2, dst_index=0), Chunk(origin_rank=2, origin_index=2, dst_rank=2, dst_index=0)])
Rank 3 chunk 3 is incorrect should be index 3 from all ranks given ReduceChunk(creation_rank=2, chunks=[Chunk(origin_rank=1, origin_index=3, dst_rank=3, dst_index=0), Chunk(origin_rank=2, origin_index=3, dst_rank=3, dst_index=0), Chunk(origin_rank=3, origin_index=3, dst_rank=3, dst_index=0)])
Rank 4 chunk 4 is incorrect should be index 4 from all ranks given ReduceChunk(creation_rank=7, chunks=[Chunk(origin_rank=4, origin_index=4, dst_rank=4, dst_index=0), Chunk(origin_rank=6, origin_index=4, dst_rank=4, dst_index=0), Chunk(origin_rank=7, origin_index=4, dst_rank=4, dst_index=0)])
Rank 5 chunk 5 is incorrect should be index 5 from all ranks given ReduceChunk(creation_rank=7, chunks=[Chunk(origin_rank=0, origin_index=5, dst_rank=5, dst_index=0), Chunk(origin_rank=1, origin_index=5, dst_rank=5, dst_index=0), Chunk(origin_rank=2, origin_index=5, dst_rank=5, dst_index=0), Chunk(origin_rank=3, origin_index=5, dst_rank=5, dst_index=0), Chunk(origin_rank=4, origin_index=5, dst_rank=5, dst_index=0), Chunk(origin_rank=5, origin_index=5, dst_rank=5, dst_index=0), Chunk(origin_rank=6, origin_index=5, dst_rank=5, dst_index=0), Chunk(origin_rank=7, origin_index=5, dst_rank=5, dst_index=0)])
Rank 6 chunk 6 is incorrect should be index 6 from all ranks given Chunk(origin_rank=6, origin_index=6, dst_rank=6, dst_index=0)
Rank 7 chunk 7 is incorrect should be index 7 from all ranks given ReduceChunk(creation_rank=7, chunks=[Chunk(origin_rank=6, origin_index=7, dst_rank=7, dst_index=0), Chunk(origin_rank=7, origin_index=7, dst_rank=7, dst_index=0)])
Rank 8 chunk 8 is incorrect should be index 8 from all ranks given ReduceChunk(creation_rank=8, chunks=[Chunk(origin_rank=8, origin_index=8, dst_rank=8, dst_index=0), Chunk(origin_rank=11, origin_index=8, dst_rank=8, dst_index=0)])
Rank 9 chunk 9 is incorrect should be index 9 from all ranks given ReduceChunk(creation_rank=8, chunks=[Chunk(origin_rank=8, origin_index=9, dst_rank=9, dst_index=0), Chunk(origin_rank=9, origin_index=9, dst_rank=9, dst_index=0), Chunk(origin_rank=11, origin_index=9, dst_rank=9, dst_index=0)])
Rank 10 chunk 10 is incorrect should be index 10 from all ranks given ReduceChunk(creation_rank=8, chunks=[Chunk(origin_rank=8, origin_index=10, dst_rank=10, dst_index=0), Chunk(origin_rank=9, origin_index=10, dst_rank=10, dst_index=0), Chunk(origin_rank=10, origin_index=10, dst_rank=10, dst_index=0), Chunk(origin_rank=11, origin_index=10, dst_rank=10, dst_index=0)])
Rank 11 chunk 11 is incorrect should be index 11 from all ranks given Chunk(origin_rank=11, origin_index=11, dst_rank=11, dst_index=0)
Rank 12 chunk 12 is incorrect should be index 12 from all ranks given Chunk(origin_rank=12, origin_index=12, dst_rank=12, dst_index=0)
Rank 13 chunk 13 is incorrect should be index 13 from all ranks given ReduceChunk(creation_rank=13, chunks=[Chunk(origin_rank=12, origin_index=13, dst_rank=13, dst_index=0), Chunk(origin_rank=13, origin_index=13, dst_rank=13, dst_index=0)])
Rank 14 chunk 14 is incorrect should be index 14 from all ranks given ReduceChunk(creation_rank=13, chunks=[Chunk(origin_rank=12, origin_index=14, dst_rank=14, dst_index=0), Chunk(origin_rank=13, origin_index=14, dst_rank=14, dst_index=0), Chunk(origin_rank=14, origin_index=14, dst_rank=14, dst_index=0)])
Rank 15 chunk 15 is incorrect should be index 15 from all ranks given ReduceChunk(creation_rank=13, chunks=[Chunk(origin_rank=12, origin_index=15, dst_rank=15, dst_index=0), Chunk(origin_rank=13, origin_index=15, dst_rank=15, dst_index=0), Chunk(origin_rank=14, origin_index=15, dst_rank=15, dst_index=0), Chunk(origin_rank=15, origin_index=15, dst_rank=15, dst_index=0)])
